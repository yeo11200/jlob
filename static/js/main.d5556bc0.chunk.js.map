{"version":3,"sources":["new.contents/moduel/board/profileComponent/LOGO.png","new.contents/_includes/header.js","common.js","fun.js","new.contents/moduel/board/profileComponent/profile.view.js","new.contents/moduel/board/profile.js","new.contents/moduel/board/profileComponent/profile.view.id.js","new.contents/moduel/main/main.js","new.contents/moduel/chat/char.js","new.contents/moduel/board/profileComponent/person.js","new.contents/moduel/index.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["module","exports","Header","classname","link","color","alignItmes","flexDirection","console","log","AppBar","position","Tabs","aria-label","exact","to","style","Tab","label","React","Component","API_SERVER","window","location","host","indexOf","dateYmdFilter","date","split","callTest","name","i","startDate","Date","start","endDate","end","monthDate","getTime","day","push","idx","month","allCareer","j","career","Math","ceil","data","yearCareer","floor","splitComma","items","html","undefined","toastUi","msg","toast","document","getElementById","classList","add","innerText","setTimeout","remove","ProfileView","props","handleSearch","TableRow","key","this","row","mc_compony","TableCell","component","scope","align","mc_idx","textDecoration","mc_position","dangerouslySetInnerHTML","__html","Fun","mc_project_name","mc_startdate","mc_enddate","Profile","getProfileData","a","totalCareer","axios","get","Common","then","response","resposnseCode","status","setState","itemsList","carrer","fileChange","e","target","files","file","size","setfile","testPost","formData","FormData","append","state","post","res","catch","textAlign","TableContainer","Paper","Table","TableHead","TableBody","length","CircularProgress","map","value","index","onRemove","handleRemove","onSelectRow","handleSelectRow","type","onChange","onClick","ProfileDetail","view","title","error","paperCustom","list","$","removeClass","dataSet","addClass","query","queryString","parse","search","id","Box","m","elevation","className","pro_content","pro_start_date","pro_end_date","pro_skill_set","Main","socket","io","connect","Char","back","inputChange","event","joinChating","message","room","nickname","emit","on","messageList","setChatting","val","chatText","chating","getListReturn","content","inputStype","marginLeft","textArea","borderBottom","disabled","person","origin","Card","CardActionArea","CardMedia","alt","height","width","image","require","maxWidth","maxHeight","border","margin","padding","display","CardContent","Typography","gutterBottom","variant","href","Index","random","path","render","App","basename","process","Boolean","hostname","match","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d5556bc0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/LOGO.6bc3212c.png\";","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { AppBar, Tabs, Tab,  Toolbar, Typography, Button, IconButton} from '@material-ui/core';\r\nimport {  } from '@material-ui/icons'\r\nclass Header extends React.Component{\r\n\r\n    render(){\r\n        var classname = {\r\n            link : {\r\n                color : '#CC6666',\r\n                alignItmes : 'center',\r\n                flexDirection : 'column'\r\n            }\r\n        }\r\n\r\n        console.log(classname);\r\n        return(\r\n            <AppBar position=\"static\">\r\n                {/* value={value} onChange={handleChange} */}\r\n                <Tabs aria-label=\"simple tabs example\">\r\n                    <Link exact to=\"/\" style={classname.link}><Tab label=\"메인\"></Tab></Link>\r\n                    <Link exact to=\"/test\" style={classname.link}><Tab label=\"블로그 개발\"></Tab></Link>\r\n                    <Link exact to=\"/test2\" style={classname.link}><Tab label=\"이력서\"></Tab></Link>\r\n                    <Link to=\"/test3\" style={classname.link}><Tab label=\"채팅\"></Tab></Link>\r\n                </Tabs>\r\n            </AppBar>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Header;\r\n","export var API_SERVER = window.location.host.indexOf('localhost') >= 0 ? '//localhost:5000' : 'https://jinseop-todo-list.herokuapp.com';\r\n\r\n// export var API_SERVER = 'https://jinseop-todo-list.herokuapp.com';\r\n\r\n","// export를 해서 내보내줘야한다\r\n// 받을땐 import\r\nexport function a(){\r\n    let careerFirstDate = ['2019-01-01', '2019-05-31'];\r\n    let careerSecDate = ['2019-07-17'];\r\n    \r\n    let careerFirstDateEnd = new Date(careerFirstDate[1]);\r\n    let careerFirstDateStart = new Date(careerFirstDate[0]);\r\n\r\n    let careerSecDateEnd = new Date();\r\n    let careerSecDateStart = new Date(careerSecDate[0]);\r\n    // mssecond를 하루로 만드는 공식\r\n    let day = 24 * 60 * 60 * 1000;\r\n    // mssecond를 한달로 만드는 공식\r\n    let month = day * 30;\r\n\r\n    let firstMonth = (careerFirstDateEnd.getTime() - careerFirstDateStart.getTime()) / month;\r\n    let secondMonth = (careerSecDateEnd.getTime() - careerSecDateStart.getTime()) / month;\r\n\r\n\r\n    let allCareer = Math.ceil(firstMonth + secondMonth);\r\n    let data = null;\r\n\r\n    if(allCareer > 13){\r\n\r\n        var yearCareer = Math.floor((allCareer / 12));\r\n        data = Math.floor(allCareer / 12) +'년' + (allCareer % (12 * yearCareer)) +'개월';\r\n    }else{\r\n        data = allCareer + '개월';\r\n    }\r\n\r\n    return data;\r\n}\r\n\r\nexport function dateYmdFilter(date){\r\n\r\n    let dateYmd = null;\r\n    let dateA = null;\r\n\r\n    if(date == null){\r\n\r\n        dateYmd = 'Now';\r\n    }else{\r\n        dateA = date.split('T');\r\n\r\n        dateYmd = dateA[0];\r\n    }\r\n\r\n    return dateYmd;\r\n}\r\n\r\nexport function callTest(name){\r\n\r\n    // mssecond를 하루로 만드는 공식\r\n    let day = 24 * 60 * 60 * 1000;\r\n    // mssecond를 한달로 만드는 공식\r\n    let month = day * 30;\r\n\r\n    let date = [];\r\n    \r\n    for(let i in name){\r\n\r\n        let startDate = new Date(name[i].start);\r\n        let endDate = (name[i].end == null) ? new Date() : new Date(name[i].end);\r\n        let monthDate = (startDate.getTime() - endDate.getTime()) / month;\r\n        console.log(monthDate);\r\n        date.push({idx : name[i].idx, month : monthDate});\r\n    }\r\n\r\n    let allCareer = null;\r\n    for(let j in date){\r\n        allCareer -= date[j].month;\r\n    }\r\n\r\n    let career = Math.ceil(allCareer);\r\n    let data = null;\r\n\r\n    if(career > 13){\r\n\r\n        var yearCareer = Math.floor((career / 12));\r\n        data = Math.floor(career / 12) +'년' + (career % (12 * yearCareer)) +'개월';\r\n    }else{\r\n        data = career + '개월';\r\n    }\r\n\r\n    return data;\r\n}\r\n\r\nexport function splitComma(items){\r\n\r\n    var html = '<span>기술 스펙 : </span><div>';\r\n\r\n    console.log(items);\r\n    if(items !== undefined){\r\n        var splitComma = items.split(',');\r\n        \r\n        for(var i in splitComma){\r\n            console.log(splitComma[i]);\r\n    \r\n            html += '<span>'+splitComma[i]+'</span>';\r\n        }\r\n    }else{\r\n        html += '<span>'+items+'</span>';\r\n    }\r\n\r\n    html += '</div>';\r\n\r\n    return html;\r\n}\r\n\r\nexport function toastUi(msg){\r\n\r\n    var toast = document.getElementById('toast');\r\n\r\n    if(msg !== undefined){\r\n        toast.classList.add('on');\r\n        toast.innerText = msg;\r\n    }\r\n\r\n    setTimeout(function(){\r\n        toast.classList.remove('on');\r\n    }, 1000);\r\n}","import React from \"react\";\r\nimport { Link } from 'react-router-dom';\r\n// import { Modal, Backdrop } from '@material-ui/core';\r\nimport { TableContainer, Table, TableHead, TableRow, TableCell, Paper, TableBody } from '@material-ui/core';\r\n\r\nimport * as Common from '../../../../common';\r\nimport * as Fun from '../../../../fun';\r\n\r\nclass ProfileView extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        console.log('props111');\r\n        console.log(props);\r\n    }\r\n    \r\n    handleSearch = function(items){\r\n        console.log(items);\r\n        // window.location.href = `/test2/view?id=${items}`;\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <TableRow key={this.props.row.mc_compony}>\r\n                <TableCell component=\"th\" scope=\"rows\">\r\n                    {this.props.row.mc_compony}\r\n                </TableCell>\r\n                <TableCell align=\"center\"><Link to={`/test2/dita?id=${this.props.row.mc_idx}`} style={{textDecoration: 'none'}}>{this.props.row.mc_position}</Link></TableCell>\r\n                <TableCell align=\"right\"><div dangerouslySetInnerHTML={{__html : Fun.splitComma(this.props.row.mc_project_name)}}></div></TableCell>\r\n                {/* <TableCell align=\"right\">{value.mc_project_name}</TableCell> */}\r\n                <TableCell align=\"right\">{Fun.dateYmdFilter(this.props.row.mc_startdate)}</TableCell>\r\n                <TableCell align=\"right\">{Fun.dateYmdFilter(this.props.row.mc_enddate)}</TableCell>\r\n            </TableRow>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default ProfileView;","import React from \"react\";\r\nimport axios from 'axios';\r\n\r\nimport ProfileView from './profileComponent/profile.view';\r\n\r\nimport ReactLoading from 'react-loading';\r\nimport { TableContainer, Table, TableHead, TableRow, TableCell, Paper, TableBody, CircularProgress } from '@material-ui/core';\r\nimport { FirstPage, LastPage, KeyboardArrowRight, KeyboardArrowLeft} from '@material-ui/icons';\r\n\r\nimport * as Common from '../../../common';\r\nimport * as Fun from '../../../fun';\r\n\r\nclass Profile extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        console.log(props);\r\n\r\n        this.state = {\r\n            itemsList : [],\r\n            resposnseCode : null,\r\n        }        \r\n    }\r\n\r\n    componentDidMount(){\r\n        console.log(1);\r\n        this.getProfileData();\r\n    }\r\n\r\n    getProfileData = async () => {\r\n        \r\n        var  totalCareer = [];\r\n\r\n        await axios.get(Common.API_SERVER+'/profile').then( response => {\r\n            \r\n            var items = response.data;\r\n\r\n            var resposnseCode = items.status;\r\n            this.setState({resposnseCode : items.status});\r\n\r\n            console.log(resposnseCode);\r\n            if(resposnseCode === 200){\r\n\r\n                var itemsList = items.data.carrer;\r\n\r\n                for(var i in itemsList){\r\n                    console.log(itemsList[i]);\r\n\r\n                    totalCareer.push({ idx : itemsList[i].mc_idx , start : itemsList[i].mc_startdate, end : itemsList[i].mc_enddate});\r\n                }\r\n                var date = Fun.callTest(totalCareer)\r\n                this.setState({itemsList : itemsList, date : date});\r\n\r\n\r\n                Fun.callTest(totalCareer);\r\n                \r\n            }else{\r\n                this.setState({itemsList : []});\r\n            }\r\n\r\n        })\r\n\r\n    }\r\n\r\n    fileChange = function(e){\r\n        console.log(1);\r\n        console.log(e.target.files[0]);\r\n\r\n        var file = e.target.files[0];\r\n\r\n        var size = 10 * 1024 * 1024;\r\n\r\n        console.log(size);\r\n        if(size <= file.size){\r\n            console.log('너무 커요');\r\n            return;\r\n        }\r\n        this.setState({\r\n            setfile : e.target.files[0]\r\n        })\r\n    }\r\n\r\n    testPost = function(){\r\n\r\n        const formData = new FormData();\r\n\r\n        formData.append('file', this.state.setfile);\r\n\r\n        axios.post(Common.API_SERVER+'/profile', formData).then(res => {\r\n            console.log(res);\r\n        }).catch(res => {\r\n            console.log(res);\r\n        });\r\n    }\r\n    render(){\r\n\r\n        let { itemsList, resposnseCode, date } = this.state;\r\n        return(\r\n            <div>\r\n                {/* 자기 소개서나 프로젝트 별로 작업 할 곳 */}\r\n\r\n                <div>\r\n                    <h2>경력사항</h2> <div style={{textAlign: 'right'}}>총경력 : {date}</div>\r\n                    <TableContainer component={Paper}>\r\n                        <Table aria-label=\"simple table\">\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell>회사명 </TableCell>\r\n                                    <TableCell align=\"center\">직군</TableCell>\r\n                                    <TableCell align=\"right\">프로젝트</TableCell>\r\n                                    <TableCell align=\"right\">입사 일</TableCell>\r\n                                    <TableCell align=\"right\">종료 일</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                            {this.state.itemsList.length == 0 ? <CircularProgress color=\"secondary\" /> : itemsList.map((value, index) => (\r\n                                \r\n                                <ProfileView key={value.mc_idx} row={value} onRemove={this.handleRemove} onSelectRow={this.handleSelectRow} />\r\n                                \r\n                            ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                    <input type=\"file\" onChange={(e) => this.fileChange(e)}></input>\r\n                    <button onClick={() => this.testPost()}>테스트</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport queryString from 'query-string';\r\nimport axios from 'axios';\r\nimport * as Common from '../../../../common';\r\nimport { TableContainer, Table, TableHead, TableRow, TableCell, Paper, TableBody, Box, TextField, CircularProgress} from '@material-ui/core';\r\nimport ProfileView from './profile.view';\r\nimport * as Fun from '../../../../fun';\r\nimport $ from 'jquery';\r\n\r\nclass ProfileDetail extends React.Component{\r\n\r\n    constructor(props){\r\n\r\n        super(props);\r\n\r\n        var query = queryString.parse(props.location.search);\r\n        \r\n        console.log('detail', query);\r\n\r\n        console.log(props);\r\n\r\n        this.state = {\r\n            idx : query.id,\r\n            itemsList : [],\r\n            resposnseCode : null,\r\n            title : {},\r\n            date : null,\r\n            dataSet : null,\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount(){\r\n        this.getProfileData();\r\n    }\r\n\r\n    getProfileData = async () => {\r\n        \r\n        var  totalCareer = [];\r\n\r\n        await axios.get(Common.API_SERVER+'/profile/'+ this.state.idx).then( response => {\r\n            \r\n            var items = response.data;\r\n\r\n            var resposnseCode = items.status;\r\n            this.setState({resposnseCode : items.status});\r\n\r\n            \r\n            if(resposnseCode === 200){\r\n\r\n                var itemsList = items.data.view;\r\n                var title = items.data.title;\r\n\r\n                console.error(title);\r\n                totalCareer.push({ idx : title.mc_idx , start : title.mc_startdate, end : title.mc_enddate});\r\n                console.log(itemsList);\r\n                this.setState({itemsList : itemsList, title : title, date : Fun.callTest(totalCareer)});\r\n                \r\n            }else{\r\n                this.setState({itemsList : []});\r\n            }\r\n\r\n        })\r\n\r\n    }\r\n\r\n    paperCustom = (index, list) => {\r\n        console.log($('.ui-'+index));\r\n\r\n        console.log(list);\r\n        $('.MuiPaper-root').removeClass('MuiPaper-elevation3');\r\n\r\n        if(index !== this.state.dataSet){\r\n            this.setState({dataSet : index});\r\n            $('.ui-'+index).addClass('MuiPaper-elevation3');\r\n        }else{\r\n            this.setState({dataSet : null});\r\n        }\r\n\r\n    }\r\n    render(){\r\n\r\n        let { itemsList, resposnseCode, title, date } = this.state;\r\n\r\n        console.log(this.state.dataSet)\r\n        return(\r\n            <div>\r\n                    <Box component=\"div\" m={1}>\r\n                        {title.mc_compony} <span>{date}</span>\r\n                    </Box>\r\n                    {\r\n                        resposnseCode == null ? <CircularProgress color=\"secondary\" /> : itemsList.map((value, index) => (\r\n                            <Paper elevation={1} className={`ui-${index}` + (this.state.dataSet === index ? ' on' : '')} onClick={ () => this.paperCustom(index, itemsList)}\r\n                            color=\"secondary.main\"\r\n                            >\r\n                                <div>\r\n                                    <div><span>프로젝트 명 : </span>{value.pro_content}</div>\r\n                                    <div><span>프로젝트 시작일 : </span>{Fun.dateYmdFilter(value.pro_start_date)}</div>\r\n                                    <div><span>프로젝트 종료일: </span>{Fun.dateYmdFilter(value.pro_end_date)}</div>\r\n                                    <div dangerouslySetInnerHTML={{__html : Fun.splitComma(value.pro_skill_set)}}></div>\r\n                                </div>\r\n                            </Paper>\r\n                        ))\r\n                    }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProfileDetail;","import React from 'react';\r\n\r\n\r\nclass Main extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                메인화면\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Main;","import React, { useEffect, useState } from 'react';\r\nimport io from 'socket.io-client';\r\nimport $ from 'jquery';\r\nimport * as Common from '../../../common';\r\nimport * as Fun from '../../../fun';\r\n\r\nvar socket = io.connect(Common.API_SERVER);\r\n\r\nclass Char extends React.Component{\r\n\r\n    constructor(props){\r\n\r\n        super(props);\r\n\r\n        console.log(props);\r\n        this.state = {\r\n            name : '', \r\n            room : '',\r\n            state : false,\r\n            chatText : '',\r\n            messageList : [],\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 이걸 인용해서 chanel id도 만들고 채팅방 리스트와 함께 만들수 있다.\r\n     */\r\n    componentDidMount(){\r\n\r\n    }\r\n    \r\n        /**\r\n     * state에 변화가 일어났을 경우 발생하는 LifeCycle \r\n     */\r\n    componentWillMount(){\r\n\r\n        socket.on('chat message2', (msg) => {\r\n            var message = this.state.messageList;\r\n            console.log(message);\r\n\r\n            message.push({'nickname' : msg.nickname , 'content' : msg.message});\r\n            \r\n            console.log(message);\r\n\r\n            this.setState({messageList : message });\r\n        });\r\n    }\r\n\r\n    back = () => {\r\n        console.log(this.state.name);\r\n        // props.history.goBack();\r\n    }\r\n\r\n    inputChange = (event, state) => {\r\n        /**\r\n         * react에서 변수의 데이터를 담을 떄 change 함수를 사용\r\n         * event.target 도 있지만, event.currenttarget 을 사용하면 조금 더 정확한 데이터가 가능\r\n         * \r\n         */\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n\r\n    joinChating = () =>{\r\n\r\n        var message = [];\r\n        if(this.state.name.length != 0 && this.state.room.length != 0){\r\n\r\n            let data = {\r\n                'mUid' : 1,\r\n                'roomName' : this.state.room,\r\n                'nickname' : this.state.name,\r\n            }\r\n\r\n            if(data.nickname.length == 0){\r\n                return;\r\n            }\r\n\r\n            // 방생성은 같은방일 때 한번 \r\n            socket.emit('create room', data);\r\n\r\n            \r\n            socket.on('join room', (data) => {\r\n\r\n                message.push({'nickname' : this.state.name , 'content' : data.message, 'state' : 'join'});\r\n\r\n                this.setState({\r\n                    state : true\r\n                })\r\n\r\n                console.log(message);\r\n                if(data.status == '0000'){\r\n                    this.setState({\r\n                        messageList : message\r\n                    });\r\n                }else {\r\n                    this.setState({\r\n                        messageList : message\r\n                    });\r\n                }\r\n            });\r\n\r\n        }else{\r\n\r\n            if(this.state.name.length == 0){\r\n                Fun.toastUi('이름을 입력해주세요.');\r\n            }else if(this.state.room.length == 0){\r\n                Fun.toastUi('방 이름을 입력해 주세요.');\r\n            }\r\n        }\r\n    }\r\n\r\n    setChatting = () => {\r\n\r\n        var room = $('input[name=room]').val();\r\n        var name = $('input[name=name]').val();\r\n\r\n\r\n        console.log(1);\r\n        if(this.state.chatText == '' || this.state.chatText == null){\r\n            return;\r\n        }\r\n\r\n        var chating = {\r\n            'roomName' : room,\r\n            'nickname' : name,\r\n            'message' : this.state.chatText\r\n        }\r\n\r\n        socket.emit('chat message1', chating);\r\n    }\r\n\r\n    getListReturn = (value) => {\r\n        console.log(value);\r\n\r\n        var html = ''\r\n        if(value.state === 'join'){\r\n            html += `<div>${value.content}</div>`;\r\n        }else{\r\n            html += `<div class=\"sender\">${value.nickname}</div>`;\r\n            html += `<div class=\"message\">${value.content}</div>`;\r\n        }\r\n\r\n        return html;\r\n    }\r\n    render(){\r\n\r\n        var style = {\r\n            inputStype : {\r\n                marginLeft : '5px',\r\n            },\r\n            textArea : {\r\n                borderBottom : '1px solid #F18C7E',\r\n            }\r\n        }\r\n    \r\n        const { name, room, state, chatText, messageList } = this.state\r\n        return(\r\n            <div>\r\n                <div className=\"char-input\">\r\n                    <div className={(state == true ? 'on' : 'none') + ' here'}>\r\n                        <input onChange={(event) => this.inputChange(event, 'name')} name=\"name\"/>\r\n                        <input onChange={(event) => this.inputChange(event, 'room')} name=\"room\" style={style.inputStype}/>\r\n                        <button \r\n                            type=\"button\" \r\n                            className=\"submit-button\" \r\n                            onClick={(event) => this.joinChating()}>\r\n                            Join\r\n                        </button>\r\n                    </div>\r\n                    <div className={'char-textarea ' + (state == true ? 'on' : 'none')} style={style.textArea}>\r\n                        <textarea id=\"chatInput\" name=\"chatText\" onChange={(event) => this.inputChange(event, 'text')}>{chatText}</textarea>\r\n                        <button \r\n                            type=\"button\" \r\n                            className={'submit-button' + ((chatText == '' || chatText == null) ? ' off' : ' on')}\r\n                            onClick={(event) => this.setChatting()}\r\n                            disabled={chatText == '' || chatText == null ? true : false}>\r\n                            Submit\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"char-list\">\r\n                    채팅 리스트\r\n                    <ul>\r\n                    {/** 동적으로 생성할 li */\r\n                        messageList.length === 0 ? '' : messageList.map((value, index) => {\r\n                            return (\r\n                            <li \r\n                                className={\r\n                                (name === value.nickname && value.state !== 'join' ? 'left' : 'right') + \r\n                                (value.state === 'join' && value.state !== undefined ? ' center' : '')}\r\n                                dangerouslySetInnerHTML={{__html : this.getListReturn(value)}}>\r\n                            </li>\r\n                            )\r\n                        })\r\n                    } \r\n                    </ul>\r\n                </div>\r\n                <button onClick={this.back}>뒤로가기</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Char;","import React from \"react\";\r\nimport { Card, CardActionArea, CardActions, CardContent, CardMedia, Typography } from '@material-ui/core';\r\nimport { logo } from '../../../../logo.svg';\r\n\r\nclass person extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        console.log(window.location.origin );\r\n    }\r\n\r\n    render(){\r\n\r\n        const style = {\r\n            media : {\r\n                width: 'auto',\r\n                height: 'auto',\r\n                maxWidth: '100px',\r\n                maxHeight: '100px',\r\n                border: 'none', margin: '0', padding: '0', display: 'inline',\r\n            }\r\n        }\r\n        return(\r\n            <div>\r\n                 {/* 개인 정보를 적는 컴포넌트 */}\r\n                 <Card>\r\n                    <CardActionArea>\r\n                        \r\n                        {/** require('./LOGO.png') image를 추가할 경우는 require를 이용해서 사용한다. */}\r\n                        <CardMedia\r\n                        component=\"img\"\r\n                        alt=\"Contemplative Reptile\"\r\n                        height=\"100px\"\r\n                        width=\"100px\"\r\n                        image={require('./LOGO.png')}\r\n                        title=\"Contemplative Reptile\"\r\n\r\n                        style={style.media}\r\n                        />\r\n                        <CardContent>\r\n                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                            신진섭\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                            프론트개발자를 지향하지만, 풀스택 개발을 원한다.\r\n                        </Typography>\r\n                        </CardContent>\r\n                    </CardActionArea>\r\n                </Card>\r\n\r\n                <dl>\r\n                    <dt className=\"blog\">Blog : </dt>\r\n                    <dd><a href=\"https://blog.naver.com/sksksms2\" target=\"_blank\">https://blog.naver.com/sksksms2</a></dd>\r\n                    <dt className=\"github\">Git : </dt>\r\n                    <dd><a href=\"https://github.com/yeo11200\"  target=\"_blank\">https://github.com/yeo11200</a></dd>\r\n                    <dt className=\"email\">Email : </dt>\r\n                    <dd><a href=\"mailto:yeo11200@hanmail.net\">yeo11200@hanmail.net</a></dd>\r\n                </dl>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default person;","/**\r\n * Route의 component의 데이터를 export만 시키기 위한 js\r\n */\r\nimport React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { Profile, ProfileDetail, Main, Char } from '../route/router';\r\nimport Person from './board/profileComponent/person';\r\n\r\nclass Index extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n    render(){\r\n\r\n        \r\n        const randomId = Math.floor(Math.random() * 100000);\r\n\r\n\r\n        console.log('Index');\r\n        return(\r\n            <div>\r\n                <Person></Person>\r\n                {/**\r\n                 * 해당 url에 대한 컴포넌트를 지정할 때 사용을 한다.\r\n                 * render function () { return <>} 이렇게 쓰는 방법\r\n                 * component = {component }를 사용하는 방법이다\r\n                 */}\r\n                <Route path=\"/test\" render={() => (\r\n                            <div>\r\n                                <div className=\"blog-info\">\r\n                                    <dl>\r\n                                        <dd>{this.props.name}</dd>\r\n                                        <dd>React</dd>\r\n                                        <dd>Express</dd>\r\n                                        <dd>FireBase</dd>\r\n                                        <dd>MariaDB</dd>\r\n                                        <dd>AWS RDS</dd>\r\n                                        <dd>Git Hub</dd>\r\n                                        <dd>material-ui</dd>\r\n                                        <dd>AWS S3</dd>\r\n                                    </dl>\r\n                                </div>\r\n                \r\n                                <div className=\"blog-connenct\">\r\n                \r\n                                </div>\r\n                            </div>\r\n                )}></Route>\r\n                    <Route exact path=\"/\" component={ Main }></Route>\r\n                    <Route exact path=\"/test2\" component={ Profile }></Route>\r\n                    <Route exact path=\"/test3\" component={ Char }></Route>\r\n                    <Route path=\"/test2/dita\" component={ ProfileDetail }></Route>\r\n\r\n                    \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Index;","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\n\r\nimport {\r\n  BrowserRouter as Route,\r\n  Router,\r\n  Link \r\n} from 'react-router-dom';\r\n\r\nimport Header from './new.contents/_includes/header';\r\n\r\nimport Index from './new.contents/moduel/index';\r\n\r\nimport '../src/css/common.css?v=2020';\r\nfunction App() {\r\n  \r\n  return (\r\n    // basename={process.env.PUBLIC_URL} : 기본적인 경로는 유지 됨\r\n    <Route className=\"container\" basename={process.env.PUBLIC_URL} >\r\n      <div id=\"toast\"></div>\r\n      <Header></Header>\r\n      <Index></Index>\r\n    </Route>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nReactDOM.render(<Router basename={process.env.PUBLIC_URL}>< App /></Router>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";"],"sourceRoot":""}