{"version":3,"sources":["new.contents/moduel/board/profileComponent/LOGO.png","new.contents/_includes/header.js","common.js","fun.js","new.contents/moduel/board/profileComponent/profile.view.js","new.contents/moduel/board/profile.js","new.contents/moduel/board/profileComponent/profile.view.id.js","new.contents/moduel/main/main.js","Page/chat.js","new.contents/moduel/board/profileComponent/person.js","new.contents/moduel/index.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["module","exports","Header","classname","link","color","alignItmes","flexDirection","console","log","AppBar","position","Tabs","aria-label","exact","to","style","Tab","label","React","Component","API_SERVER","window","location","host","indexOf","dateYmdFilter","date","split","callTest","name","i","startDate","Date","start","endDate","end","monthDate","getTime","day","push","idx","month","allCareer","j","career","Math","ceil","data","yearCareer","floor","splitComma","items","html","undefined","ProfileView","props","handleSearch","TableRow","key","this","row","mc_compony","TableCell","component","scope","align","mc_idx","textDecoration","mc_position","dangerouslySetInnerHTML","__html","Fun","mc_project_name","mc_startdate","mc_enddate","Profile","getProfileData","a","totalCareer","axios","get","Common","then","response","resposnseCode","status","setState","itemsList","carrer","state","textAlign","TableContainer","Paper","Table","TableHead","TableBody","length","CircularProgress","map","value","index","onRemove","handleRemove","onSelectRow","handleSelectRow","ProfileDetail","view","title","error","paperCustom","list","$","removeClass","dataSet","addClass","query","queryString","parse","search","id","Box","m","elevation","className","onClick","pro_content","pro_start_date","pro_end_date","pro_skill_set","Main","require","socket","io","connect","Comm","Char","commentSend","messageContent","current","nickname","messageName","message","includes","confirm","emit","chating","roomName","alert","onTodoChange","createRef","keyDownFuc","e","type","keyCode","nicknameSend","submitRoomName","rommName","messageList","on","document","getElementById","display","levalRoom","msg","match","round","random","roomStatus","clientId","content","ref","disabled","onKeyDown","onChange","target","person","origin","Card","CardActionArea","CardMedia","alt","height","width","image","maxWidth","maxHeight","border","margin","padding","CardContent","Typography","gutterBottom","variant","href","Index","path","render","App","basename","process","Boolean","hostname","ReactDOM","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.56fd5805.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/LOGO.6bc3212c.png\";","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { AppBar, Tabs, Tab,  Toolbar, Typography, Button, IconButton} from '@material-ui/core';\r\nimport {  } from '@material-ui/icons'\r\nclass Header extends React.Component{\r\n\r\n    render(){\r\n        var classname = {\r\n            link : {\r\n                color : '#CC6666',\r\n                alignItmes : 'center',\r\n                flexDirection : 'column'\r\n            }\r\n        }\r\n\r\n        console.log(classname);\r\n        return(\r\n            <AppBar position=\"static\">\r\n                {/* value={value} onChange={handleChange} */}\r\n                <Tabs aria-label=\"simple tabs example\">\r\n                    <Link exact to=\"/test\" style={classname.link}><Tab label=\"블로그 개발\"></Tab></Link>\r\n                    <Link exact to=\"/test2\" style={classname.link}><Tab label=\"이력서\"></Tab></Link>\r\n                    <Link to=\"/test3\" style={classname.link}><Tab label=\"채팅\"></Tab></Link>\r\n                </Tabs>\r\n            </AppBar>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Header;\r\n","export var API_SERVER = window.location.host.indexOf('localhost') >= 0 ? '//localhost:5000' : 'https://jinseop-todo-list.herokuapp.com';\r\n\r\n// export var API_SERVER = 'https://jinseop-todo-list.herokuapp.com';\r\n\r\n","// export를 해서 내보내줘야한다\r\n// 받을땐 import\r\nexport function a(){\r\n    let careerFirstDate = ['2019-01-01', '2019-05-31'];\r\n    let careerSecDate = ['2019-07-17'];\r\n    \r\n    let careerFirstDateEnd = new Date(careerFirstDate[1]);\r\n    let careerFirstDateStart = new Date(careerFirstDate[0]);\r\n\r\n    let careerSecDateEnd = new Date();\r\n    let careerSecDateStart = new Date(careerSecDate[0]);\r\n    // mssecond를 하루로 만드는 공식\r\n    let day = 24 * 60 * 60 * 1000;\r\n    // mssecond를 한달로 만드는 공식\r\n    let month = day * 30;\r\n\r\n    let firstMonth = (careerFirstDateEnd.getTime() - careerFirstDateStart.getTime()) / month;\r\n    let secondMonth = (careerSecDateEnd.getTime() - careerSecDateStart.getTime()) / month;\r\n\r\n\r\n    let allCareer = Math.ceil(firstMonth + secondMonth);\r\n    let data = null;\r\n\r\n    if(allCareer > 13){\r\n\r\n        var yearCareer = Math.floor((allCareer / 12));\r\n        data = Math.floor(allCareer / 12) +'년' + (allCareer % (12 * yearCareer)) +'개월';\r\n    }else{\r\n        data = allCareer + '개월';\r\n    }\r\n\r\n    return data;\r\n}\r\n\r\nexport function dateYmdFilter(date){\r\n\r\n    let dateYmd = null;\r\n    let dateA = null;\r\n\r\n    if(date == null){\r\n\r\n        dateYmd = 'Now';\r\n    }else{\r\n        dateA = date.split('T');\r\n\r\n        dateYmd = dateA[0];\r\n    }\r\n\r\n    return dateYmd;\r\n}\r\n\r\nexport function callTest(name){\r\n\r\n    // mssecond를 하루로 만드는 공식\r\n    let day = 24 * 60 * 60 * 1000;\r\n    // mssecond를 한달로 만드는 공식\r\n    let month = day * 30;\r\n\r\n    let date = [];\r\n    \r\n    for(let i in name){\r\n\r\n        let startDate = new Date(name[i].start);\r\n        let endDate = (name[i].end == null) ? new Date() : new Date(name[i].end);\r\n        let monthDate = (startDate.getTime() - endDate.getTime()) / month;\r\n        console.log(monthDate);\r\n        date.push({idx : name[i].idx, month : monthDate});\r\n    }\r\n\r\n    let allCareer = null;\r\n    for(let j in date){\r\n        allCareer -= date[j].month;\r\n    }\r\n\r\n    let career = Math.ceil(allCareer);\r\n    let data = null;\r\n\r\n    if(career > 13){\r\n\r\n        var yearCareer = Math.floor((career / 12));\r\n        data = Math.floor(career / 12) +'년' + (career % (12 * yearCareer)) +'개월';\r\n    }else{\r\n        data = career + '개월';\r\n    }\r\n\r\n    return data;\r\n}\r\n\r\nexport function splitComma(items){\r\n\r\n    var html = '<span>기술 스펙 : </span><div>';\r\n\r\n    console.log(items);\r\n    if(items !== undefined){\r\n        var splitComma = items.split(',');\r\n        \r\n        for(var i in splitComma){\r\n            console.log(splitComma[i]);\r\n    \r\n            html += '<span>'+splitComma[i]+'</span>';\r\n        }\r\n    }else{\r\n        html += '<span>'+items+'</span>';\r\n    }\r\n\r\n    html += '</div>';\r\n\r\n    return html;\r\n}","import React from \"react\";\r\nimport { Link } from 'react-router-dom';\r\n// import { Modal, Backdrop } from '@material-ui/core';\r\nimport { TableContainer, Table, TableHead, TableRow, TableCell, Paper, TableBody } from '@material-ui/core';\r\n\r\nimport * as Common from '../../../../common';\r\nimport * as Fun from '../../../../fun';\r\n\r\nclass ProfileView extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        console.log('props111');\r\n        console.log(props);\r\n    }\r\n    \r\n    handleSearch = function(items){\r\n        console.log(items);\r\n        // window.location.href = `/test2/view?id=${items}`;\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <TableRow key={this.props.row.mc_compony}>\r\n                <TableCell component=\"th\" scope=\"rows\">\r\n                    {this.props.row.mc_compony}\r\n                </TableCell>\r\n                <TableCell align=\"center\"><Link to={`/test2/dita?id=${this.props.row.mc_idx}`} style={{textDecoration: 'none'}}>{this.props.row.mc_position}</Link></TableCell>\r\n                <TableCell align=\"right\"><div dangerouslySetInnerHTML={{__html : Fun.splitComma(this.props.row.mc_project_name)}}></div></TableCell>\r\n                {/* <TableCell align=\"right\">{value.mc_project_name}</TableCell> */}\r\n                <TableCell align=\"right\">{Fun.dateYmdFilter(this.props.row.mc_startdate)}</TableCell>\r\n                <TableCell align=\"right\">{Fun.dateYmdFilter(this.props.row.mc_enddate)}</TableCell>\r\n            </TableRow>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default ProfileView;","import React from \"react\";\r\nimport axios from 'axios';\r\n\r\nimport ProfileView from './profileComponent/profile.view';\r\n\r\nimport ReactLoading from 'react-loading';\r\nimport { TableContainer, Table, TableHead, TableRow, TableCell, Paper, TableBody, CircularProgress } from '@material-ui/core';\r\nimport { FirstPage, LastPage, KeyboardArrowRight, KeyboardArrowLeft} from '@material-ui/icons';\r\n\r\nimport * as Common from '../../../common';\r\nimport * as Fun from '../../../fun';\r\n\r\nclass Profile extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        console.log(props);\r\n\r\n        this.state = {\r\n            itemsList : [],\r\n            resposnseCode : null,\r\n        }        \r\n    }\r\n\r\n    componentDidMount(){\r\n        console.log(1);\r\n        this.getProfileData();\r\n    }\r\n\r\n    getProfileData = async () => {\r\n        \r\n        var  totalCareer = [];\r\n\r\n        await axios.get(Common.API_SERVER+'/profile').then( response => {\r\n            \r\n            var items = response.data;\r\n\r\n            var resposnseCode = items.status;\r\n            this.setState({resposnseCode : items.status});\r\n\r\n            console.log(resposnseCode);\r\n            if(resposnseCode === 200){\r\n\r\n                var itemsList = items.data.carrer;\r\n\r\n                for(var i in itemsList){\r\n                    console.log(itemsList[i]);\r\n\r\n                    totalCareer.push({ idx : itemsList[i].mc_idx , start : itemsList[i].mc_startdate, end : itemsList[i].mc_enddate});\r\n                }\r\n                var date = Fun.callTest(totalCareer)\r\n                this.setState({itemsList : itemsList, date : date});\r\n\r\n\r\n                Fun.callTest(totalCareer);\r\n                \r\n            }else{\r\n                this.setState({itemsList : []});\r\n            }\r\n\r\n        })\r\n\r\n    }\r\n\r\n    render(){\r\n\r\n        let { itemsList, resposnseCode, date } = this.state;\r\n        return(\r\n            <div>\r\n                {/* 자기 소개서나 프로젝트 별로 작업 할 곳 */}\r\n\r\n                <div>\r\n                    <h2>경력사항</h2> <div style={{textAlign: 'right'}}>총경력 : {date}</div>\r\n                    <TableContainer component={Paper}>\r\n                        <Table aria-label=\"simple table\">\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell>회사명 </TableCell>\r\n                                    <TableCell align=\"center\">직군</TableCell>\r\n                                    <TableCell align=\"right\">프로젝트</TableCell>\r\n                                    <TableCell align=\"right\">입사 일</TableCell>\r\n                                    <TableCell align=\"right\">종료 일</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                            {this.state.itemsList.length == 0 ? <CircularProgress color=\"secondary\" /> : itemsList.map((value, index) => (\r\n                                \r\n                                <ProfileView key={value.mc_idx} row={value} onRemove={this.handleRemove} onSelectRow={this.handleSelectRow} />\r\n                                \r\n                            ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport queryString from 'query-string';\r\nimport axios from 'axios';\r\nimport * as Common from '../../../../common';\r\nimport { TableContainer, Table, TableHead, TableRow, TableCell, Paper, TableBody, Box, TextField, CircularProgress} from '@material-ui/core';\r\nimport ProfileView from './profile.view';\r\nimport * as Fun from '../../../../fun';\r\nimport $ from 'jquery';\r\n\r\nclass ProfileDetail extends React.Component{\r\n\r\n    constructor(props){\r\n\r\n        super(props);\r\n\r\n        var query = queryString.parse(props.location.search);\r\n        \r\n        console.log('detail', query);\r\n\r\n        console.log(props);\r\n\r\n        this.state = {\r\n            idx : query.id,\r\n            itemsList : [],\r\n            resposnseCode : null,\r\n            title : {},\r\n            date : null,\r\n            dataSet : null,\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount(){\r\n        this.getProfileData();\r\n    }\r\n\r\n    getProfileData = async () => {\r\n        \r\n        var  totalCareer = [];\r\n\r\n        await axios.get(Common.API_SERVER+'/profile/'+ this.state.idx).then( response => {\r\n            \r\n            var items = response.data;\r\n\r\n            var resposnseCode = items.status;\r\n            this.setState({resposnseCode : items.status});\r\n\r\n            \r\n            if(resposnseCode === 200){\r\n\r\n                var itemsList = items.data.view;\r\n                var title = items.data.title;\r\n\r\n                console.error(title);\r\n                totalCareer.push({ idx : title.mc_idx , start : title.mc_startdate, end : title.mc_enddate});\r\n                console.log(itemsList);\r\n                this.setState({itemsList : itemsList, title : title, date : Fun.callTest(totalCareer)});\r\n                \r\n            }else{\r\n                this.setState({itemsList : []});\r\n            }\r\n\r\n        })\r\n\r\n    }\r\n\r\n    paperCustom = (index, list) => {\r\n        console.log($('.ui-'+index));\r\n\r\n        console.log(list);\r\n        $('.MuiPaper-root').removeClass('MuiPaper-elevation3');\r\n\r\n        if(index !== this.state.dataSet){\r\n            this.setState({dataSet : index});\r\n            $('.ui-'+index).addClass('MuiPaper-elevation3');\r\n        }else{\r\n            this.setState({dataSet : null});\r\n        }\r\n\r\n    }\r\n    render(){\r\n\r\n        let { itemsList, resposnseCode, title, date } = this.state;\r\n\r\n        console.log(this.state.dataSet)\r\n        return(\r\n            <div>\r\n                    <Box component=\"div\" m={1}>\r\n                        {title.mc_compony} <span>{date}</span>\r\n                    </Box>\r\n                    {\r\n                        resposnseCode == null ? <CircularProgress color=\"secondary\" /> : itemsList.map((value, index) => (\r\n                            <Paper elevation={1} className={`ui-${index}` + (this.state.dataSet === index ? ' on' : '')} onClick={ () => this.paperCustom(index, itemsList)}\r\n                            color=\"secondary.main\"\r\n                            >\r\n                                <div>\r\n                                    <div><span>프로젝트 명 : </span>{value.pro_content}</div>\r\n                                    <div><span>프로젝트 시작일 : </span>{Fun.dateYmdFilter(value.pro_start_date)}</div>\r\n                                    <div><span>프로젝트 종료일: </span>{Fun.dateYmdFilter(value.pro_end_date)}</div>\r\n                                    <div dangerouslySetInnerHTML={{__html : Fun.splitComma(value.pro_skill_set)}}></div>\r\n                                </div>\r\n                            </Paper>\r\n                        ))\r\n                    }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProfileDetail;","import React from 'react';\r\n\r\n\r\nclass Main extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                메인화면\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Main;","import React, { Component } from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport io from 'socket.io-client';\r\nimport $ from 'jquery';\r\nimport * as Comm from '../common';\r\nconst queryString = require('query-string');\r\n\r\n\r\nvar socket = io.connect(Comm.API_SERVER);\r\nclass Char extends React.Component{\r\n\r\n    constructor(props){\r\n\r\n        super(props);\r\n\r\n        console.log(props.match);\r\n\r\n        console.log(queryString.parse(window.location.search));\r\n        console.log(Math.round(Math.random() * 1000));\r\n        \r\n        \r\n        this.state = {name : '', message : '', messageList : [], status : false, roomName : '', roomStatus : false, clientId : Math.round(Math.random() * 1000)};\r\n    }\r\n\r\n    /**\r\n     * 이걸 인용해서 chanel id도 만들고 채팅방 리스트와 함께 만들수 있다.\r\n     */\r\n    componentDidMount(){\r\n\r\n    }\r\n\r\n    commentSend = () => {\r\n  \r\n        /**\r\n         * 서버에서 on으로 받아서 사용을 한다.\r\n         */\r\n\r\n        var messageContent = this.messageContent.current.value;\r\n        let nickname = this.messageName.current.value;\r\n\r\n        this.setState({\r\n            message : messageContent,\r\n            name : nickname\r\n        });\r\n\r\n        if(nickname.length == 0){\r\n            return;\r\n        }\r\n        \r\n        if(messageContent.length > 0){\r\n\r\n            if(!messageContent.includes('퇴장')){\r\n                var chating = {\r\n                    'room' : this.state.roomName,\r\n                    'nickname' : this.state.name,\r\n                    'message' : messageContent\r\n                }\r\n                \r\n                socket.emit('chat message1', chating);\r\n            }else {\r\n                var out = window.confirm('진짜 퇴장하시겠습니까?');\r\n\r\n                if(out){\r\n                    socket.emit('client disconnect', 'aaaa');\r\n                }else{\r\n                    var chating = {\r\n                        'room' : this.state.roomName,\r\n                        'nickname' : this.state.name,\r\n                        'message' : messageContent\r\n                    }\r\n\r\n                    console.log(this.state.roomName);\r\n                    \r\n                    socket.emit('chat message1', chating);\r\n                }\r\n            }\r\n\r\n        }else{\r\n            alert('채팅을 입력하세요.');\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * state에 변화가 일어났을 경우 발생하는 LifeCycle \r\n     */\r\n    componentWillMount(){\r\n        var message = this.state.messageList;\r\n        socket.on('chat message2', (msg) => {\r\n            this.messageContent.current.value = '';\r\n            message.push({'nickname' : msg.nickname , 'content' : msg.message});\r\n            this.setState({messageList : message });\r\n        });\r\n    }\r\n\r\n    onTodoChange = (value) => {\r\n        this.setState({name : value});\r\n    }\r\n\r\n    messageName = React.createRef();\r\n    messageContent = React.createRef();\r\n    roomName = React.createRef();\r\n\r\n\r\n    keyDownFuc = (e, type) =>{\r\n\r\n        if(type == 'nick'){\r\n            if(e.keyCode == 13){\r\n                this.nicknameSend();\r\n            }\r\n        }else if(type == 'room'){\r\n            if(e.keyCode == 13){\r\n                this.submitRoomName();\r\n            }\r\n        }\r\n    }\r\n\r\n    submitRoomName = () => {\r\n        let rommName = (this.roomName.current.value == '') ? '' : this.roomName.current.value;\r\n        let nickname = this.messageName.current.value;\r\n\r\n        var message = this.state.messageList;\r\n        if(rommName.length > 0){\r\n            let data = {\r\n                'mUid' : 1,\r\n                'roomName' : rommName,\r\n                'nickname' : nickname,\r\n            }\r\n\r\n            if(nickname.length == 0){\r\n                return;\r\n            }\r\n\r\n            // 방생성은 같은방일ㄸ ㅐ한번 \r\n            if(this.state.roomName != rommName && this.state.nickname != nickname){\r\n                socket.emit('create room', data);\r\n\r\n            \r\n                socket.on('join room', (data) => {\r\n\r\n                    message.push({'nickname' : 'join' , 'content' : data.message});\r\n                    if(data.status == '0000'){\r\n                        document.getElementById('content').style.display = 'block';\r\n    \r\n                        this.setState({\r\n                            status : true,\r\n                            'roomStatus' : true, \r\n                            'roomName' : rommName, \r\n                            messageList : message });\r\n                    }else {\r\n                        document.getElementById('content').style.display = 'block';\r\n                        this.setState({\r\n                            status : true,\r\n                            'roomStatus' : true, \r\n                            'roomName' : rommName, \r\n                            messageList : message });\r\n                    }\r\n                });\r\n            }\r\n\r\n        }else {\r\n            alert('방 정보를 입력하세요');\r\n        }\r\n        \r\n    }\r\n\r\n    levalRoom = () => {\r\n        var message = this.state.messageList;\r\n        console.log(this.state);\r\n        if(this.state.roomName != ''){\r\n            console.log(111);\r\n            socket.emit('client disconnect', this.state);\r\n        }\r\n\r\n        socket.on('client disconnect2', (data) => {\r\n            \r\n            message.push({'nickname' : data.status , 'content' : data.msg});\r\n\r\n            this.setState({\r\n                status : false,\r\n                'roomStatus' : false, \r\n                'roomName' : '', \r\n                messageList : message \r\n            });\r\n\r\n            // message.push({'nickname' : 'join' , 'content' : data.message});\r\n            // if(data.status == '0000'){\r\n            //     document.getElementById('content').style.display = 'block';\r\n\r\n            //     this.setState({\r\n            //         status : true,\r\n            //         'roomStatus' : true, \r\n            //         'roomName' : rommName, \r\n            //         messageList : message });\r\n            // }else {\r\n            //     document.getElementById('content').style.display = 'block';\r\n            //     this.setState({\r\n            //         status : true,\r\n            //         'roomStatus' : true, \r\n            //         'roomName' : rommName, \r\n            //         messageList : message });\r\n            // }\r\n        });\r\n        \r\n    }\r\n    render(){\r\n        let { name, messageList, status, roomStatus } = this.state;\r\n\r\n        const display = {display: 'none'};\r\n        return(\r\n            <div>\r\n                <div>\r\n                    <ul>\r\n                        {\r\n                            messageList.length > 0 ? messageList.map((value, index) => {\r\n                                return(\r\n                                    <li className={value.nickname == name ? 'right' : 'left'}>{value.nickname} : {value.content}</li>\r\n                                )\r\n                            }) : <li>send ing</li>\r\n                        }\r\n                    </ul>\r\n                </div>\r\n                <div>\r\n                    <div>\r\n                        <div>\r\n                            <button \r\n                                onClick={() => { this.levalRoom()}}\r\n                            >나가기\r\n                            </button>\r\n                        </div>\r\n                        <div>\r\n                            <input\r\n                                ref={this.roomName}\r\n                                disabled = {roomStatus ? \"disabled\" : false}\r\n                                onKeyDown={(e) => { this.keyDownFuc(e, 'room');}}\r\n                            >\r\n                            </input>\r\n                        </div>\r\n                        <div>\r\n                            <input \r\n                                ref={this.messageName} \r\n                                disabled = {status ? \"disabled\" : false}\r\n                                value = {name}\r\n                                onChange = {e => this.onTodoChange(e.target.value)}\r\n                                >\r\n                            </input>\r\n                            <button \r\n                                onClick={() => { this.submitRoomName()}}\r\n                            >닉네임 등록\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                    <div style={display} id=\"content\">\r\n                        <textarea ref={this.messageContent}></textarea><br/>\r\n                        <button onClick={() => { this.commentSend()}}>\r\n                            Send\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        socket.emit('client disconnect', 'aaaa');\r\n    }\r\n}\r\n\r\nexport default Char;","import React from \"react\";\r\nimport { Card, CardActionArea, CardActions, CardContent, CardMedia, Typography } from '@material-ui/core';\r\nimport { logo } from '../../../../logo.svg';\r\n\r\nclass person extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        console.log(window.location.origin );\r\n    }\r\n\r\n    render(){\r\n\r\n        const style = {\r\n            media : {\r\n                width: 'auto',\r\n                height: 'auto',\r\n                maxWidth: '100px',\r\n                maxHeight: '100px',\r\n                border: 'none', margin: '0', padding: '0', display: 'inline',\r\n            }\r\n        }\r\n        return(\r\n            <div>\r\n                 {/* 개인 정보를 적는 컴포넌트 */}\r\n                 <Card>\r\n                    <CardActionArea>\r\n                        \r\n                        {/** require('./LOGO.png') image를 추가할 경우는 require를 이용해서 사용한다. */}\r\n                        <CardMedia\r\n                        component=\"img\"\r\n                        alt=\"Contemplative Reptile\"\r\n                        height=\"100px\"\r\n                        width=\"100px\"\r\n                        image={require('./LOGO.png')}\r\n                        title=\"Contemplative Reptile\"\r\n\r\n                        style={style.media}\r\n                        />\r\n                        <CardContent>\r\n                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                            신진섭\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                            프론트개발자를 지향하지만, 풀스택 개발을 원한다.\r\n                        </Typography>\r\n                        </CardContent>\r\n                    </CardActionArea>\r\n                </Card>\r\n\r\n                <dl>\r\n                    <dt className=\"blog\">Blog : </dt>\r\n                    <dd><a href=\"https://blog.naver.com/sksksms2\" target=\"_blank\">https://blog.naver.com/sksksms2</a></dd>\r\n                    <dt className=\"github\">Git : </dt>\r\n                    <dd><a href=\"https://github.com/yeo11200\"  target=\"_blank\">https://github.com/yeo11200</a></dd>\r\n                    <dt className=\"email\">Email : </dt>\r\n                    <dd><a href=\"mailto:yeo11200@hanmail.net\">yeo11200@hanmail.net</a></dd>\r\n                </dl>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default person;","/**\r\n * Route의 component의 데이터를 export만 시키기 위한 js\r\n */\r\nimport React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { Profile, ProfileDetail, Main, Char } from '../route/router';\r\nimport Person from './board/profileComponent/person';\r\n\r\nclass Index extends React.Component{\r\n    render(){\r\n        console.log('Index');\r\n        return(\r\n            <div>\r\n                <Person></Person>\r\n                {/**\r\n                 * 해당 url에 대한 컴포넌트를 지정할 때 사용을 한다.\r\n                 * render function () { return <>} 이렇게 쓰는 방법\r\n                 * component = {component }를 사용하는 방법이다\r\n                 */}\r\n                <Route path=\"/test\" render={() => (\r\n                            <div>\r\n                                <div className=\"blog-info\">\r\n                                    <dl>\r\n                                        <dd>{this.props.name}</dd>\r\n                                        <dd>React</dd>\r\n                                        <dd>Express</dd>\r\n                                        <dd>FireBase</dd>\r\n                                        <dd>MariaDB</dd>\r\n                                        <dd>AWS RDS</dd>\r\n                                        <dd>Git Hub</dd>\r\n                                        <dd>material-ui</dd>\r\n                                    </dl>\r\n                                </div>\r\n                \r\n                                <div className=\"blog-connenct\">\r\n                \r\n                                </div>\r\n                            </div>\r\n                )}></Route>\r\n                    <Route exact path=\"/\" component={ Main }></Route>\r\n                    <Route exact path=\"/test2\" component={ Profile }></Route>\r\n                    <Route exact path=\"/test3\" component={ Char }></Route>\r\n                    <Route path=\"/test2/dita\" component={ ProfileDetail }></Route>\r\n\r\n                    \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Index;","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\n\r\nimport {\r\n  BrowserRouter as Route,\r\n  Router,\r\n  Link \r\n} from 'react-router-dom';\r\n\r\nimport Header from './new.contents/_includes/header';\r\n\r\nimport Index from './new.contents/moduel/index';\r\n\r\nimport '../src/css/common.css?v=2020';\r\nfunction App() {\r\n  \r\n  return (\r\n    // basename={process.env.PUBLIC_URL} : 기본적인 경로는 유지 됨\r\n    <Route className=\"container\" basename={process.env.PUBLIC_URL} >\r\n      <Header></Header>\r\n      <Index></Index>\r\n    </Route>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nReactDOM.render(<Router basename={process.env.PUBLIC_URL}>< App /></Router>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";"],"sourceRoot":""}