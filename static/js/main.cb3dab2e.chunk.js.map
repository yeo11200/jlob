{"version":3,"sources":["new.contents/moduel/board/profileComponent/LOGO.png","new.contents/_includes/header.js","common.js","fun.js","new.contents/moduel/board/profileComponent/profile.view.js","new.contents/moduel/board/profile.js","new.contents/moduel/board/profileComponent/profile.view.id.js","new.contents/moduel/main/main.js","new.contents/moduel/chat/char.js","new.contents/moduel/schedule/Header.js","new.contents/moduel/schedule/DataCalender.js","new.contents/moduel/schedule/Week.js","new.contents/moduel/schedule/Calendar.js","new.contents/moduel/schedule/Schedule.js","new.contents/moduel/bible/Bible.js","new.contents/moduel/board/profileComponent/person.js","new.contents/moduel/index.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["module","exports","Header","classname","link","color","alignItmes","flexDirection","console","log","AppBar","position","Tabs","aria-label","exact","to","style","Tab","label","React","Component","API_SERVER","dateYmdFilter","date","split","callTest","name","i","startDate","Date","start","endDate","end","monthDate","getTime","day","push","idx","month","allCareer","j","career","Math","ceil","data","yearCareer","floor","splitComma","items","html","undefined","toastUi","msg","toast","document","getElementById","classList","add","innerText","setTimeout","remove","ProfileView","props","TableRow","key","this","row","mc_compony","TableCell","component","scope","align","mc_idx","textDecoration","mc_position","dangerouslySetInnerHTML","__html","Fun","mc_project_name","mc_startdate","mc_enddate","Profile","getProfileData","a","totalCareer","axios","get","Common","then","response","resposnseCode","status","setState","itemsList","carrer","state","textAlign","TableContainer","Paper","Table","TableHead","TableBody","length","CircularProgress","map","value","index","onRemove","handleRemove","onSelectRow","handleSelectRow","ProfileDetail","view","title","error","paperCustom","list","$","removeClass","dataSet","addClass","query","queryString","parse","location","search","id","Box","m","elevation","className","onClick","pro_content","pro_start_date","pro_end_date","pro_skill_set","Main","socket","io","connect","Char","back","inputChange","event","target","joinChating","message","room","uid","nickname","emit","on","messageList","setChatting","val","chatText","chating","getListReturn","content","localStorage","getItem","mUid","charList","currentScroll","scrollTop","endScroll","scrollHeight","inputStype","marginLeft","textArea","border","onChange","type","disabled","calendarYM","today","format","moveMonth","DataCalender","dateToArray","dates","Array","isArray","mapArrayToDate","dateArray","Error","Week","Days","firstDayFormat","weekIndex","_days","Day","moment","yearMonthDayFormat","getDay","isHolyDay","mapDaysToComponents","calendarMonthYear","selectedDayFormat","fn","thisMonth","dayInfo","isSame","firstDayOfThisWeekformat","ymOfThisCalendar","selected","Calendar","Weeks","monthYear","clickFn","firstDayOfMonth","startOf","firstDateOfMonth","firstDayOfWeek","clone","_Weeks","YM","changeSelected","Schedule","clickedDate","isBefore","isAfter","Bible","getBibleApi","bibleYn","bible_yn","setItem","bible_id","wiz_id","bible_korHRV","selectBibleContent","BIBLE_ID","WIZ_ID","random","bibleContent","removeItem","BIBLE_YN","already","bible","isLoding","book","chapter","verse","person","window","origin","Card","CardActionArea","CardMedia","alt","height","width","image","require","maxWidth","maxHeight","margin","padding","display","borderRadius","CardContent","Typography","gutterBottom","variant","href","Index","randomId","nowRandomId","path","render","App","basename","process","Boolean","hostname","match","ReactDOM","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.cb3dab2e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/LOGO.6bc3212c.png\";","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { AppBar, Tabs, Tab,  Toolbar, Typography, Button, IconButton} from '@material-ui/core';\r\nimport {  } from '@material-ui/icons'\r\nclass Header extends React.Component{\r\n\r\n    render(){\r\n        var classname = {\r\n            link : {\r\n                color : '#ffffff',\r\n                alignItmes : 'center',\r\n                flexDirection : 'column'\r\n            }\r\n        }\r\n\r\n        console.log(classname);\r\n        return(\r\n            <AppBar position=\"static\">\r\n                {/* value={value} onChange={handleChange} */}\r\n                <Tabs aria-label=\"simple tabs example\">\r\n                    <Link exact to=\"/\" style={classname.link}><Tab label=\"메인\"></Tab></Link>\r\n                    <Link exact to=\"/test\" style={classname.link}><Tab label=\"블로그 개발\"></Tab></Link>\r\n                    <Link exact to=\"/test2\" style={classname.link}><Tab label=\"이력서\"></Tab></Link>\r\n                    <Link to=\"/test3\" style={classname.link}><Tab label=\"채팅\"></Tab></Link>\r\n                    <Link to=\"/schedule\" style={classname.link}><Tab label=\"스케줄\"></Tab></Link>\r\n                </Tabs>\r\n            </AppBar>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Header;\r\n","export var API_SERVER = '//jinseop-todo-list.herokuapp.com';\r\n\r\n// export var API_SERVER = '//13.124.87.240';\r\n\r\n// export var API_SERVER = 'https://jinseop-todo-list.herokuapp.com';\r\n\r\n","// export를 해서 내보내줘야한다\r\n// 받을땐 import\r\nexport function a(){\r\n    let careerFirstDate = ['2019-01-01', '2019-05-31'];\r\n    let careerSecDate = ['2019-07-17'];\r\n    \r\n    let careerFirstDateEnd = new Date(careerFirstDate[1]);\r\n    let careerFirstDateStart = new Date(careerFirstDate[0]);\r\n\r\n    let careerSecDateEnd = new Date();\r\n    let careerSecDateStart = new Date(careerSecDate[0]);\r\n    // mssecond를 하루로 만드는 공식\r\n    let day = 24 * 60 * 60 * 1000;\r\n    // mssecond를 한달로 만드는 공식\r\n    let month = day * 30;\r\n\r\n    let firstMonth = (careerFirstDateEnd.getTime() - careerFirstDateStart.getTime()) / month;\r\n    let secondMonth = (careerSecDateEnd.getTime() - careerSecDateStart.getTime()) / month;\r\n\r\n\r\n    let allCareer = Math.ceil(firstMonth + secondMonth);\r\n    let data = null;\r\n\r\n    if(allCareer > 13){\r\n\r\n        var yearCareer = Math.floor((allCareer / 12));\r\n        data = Math.floor(allCareer / 12) +'년' + (allCareer % (12 * yearCareer)) +'개월';\r\n    }else{\r\n        data = allCareer + '개월';\r\n    }\r\n\r\n    return data;\r\n}\r\n\r\nexport function dateYmdFilter(date){\r\n\r\n    let dateYmd = null;\r\n    let dateA = null;\r\n\r\n    if(date == null){\r\n\r\n        dateYmd = 'Now';\r\n    }else{\r\n        dateA = date.split('T');\r\n\r\n        dateYmd = dateA[0];\r\n    }\r\n\r\n    return dateYmd;\r\n}\r\n\r\nexport function callTest(name){\r\n\r\n    // mssecond를 하루로 만드는 공식\r\n    let day = 24 * 60 * 60 * 1000;\r\n    // mssecond를 한달로 만드는 공식\r\n    let month = day * 30;\r\n\r\n    let date = [];\r\n    \r\n    for(let i in name){\r\n\r\n        let startDate = new Date(name[i].start);\r\n        let endDate = (name[i].end == null) ? new Date() : new Date(name[i].end);\r\n        let monthDate = (startDate.getTime() - endDate.getTime()) / month;\r\n        console.log(monthDate);\r\n        date.push({idx : name[i].idx, month : monthDate});\r\n    }\r\n\r\n    let allCareer = null;\r\n    for(let j in date){\r\n        allCareer -= date[j].month;\r\n    }\r\n\r\n    let career = Math.ceil(allCareer);\r\n    let data = null;\r\n\r\n    if(career > 13){\r\n\r\n        var yearCareer = Math.floor((career / 12));\r\n        data = Math.floor(career / 12) +'년' + (career % (12 * yearCareer)) +'개월';\r\n    }else{\r\n        data = career + '개월';\r\n    }\r\n\r\n    return data;\r\n}\r\n\r\nexport function splitComma(items){\r\n\r\n    var html = '<span>기술 스펙 : </span><div>';\r\n\r\n    console.log(items);\r\n    if(items !== undefined){\r\n        var splitComma = items.split(',');\r\n        \r\n        for(var i in splitComma){\r\n            console.log(splitComma[i]);\r\n    \r\n            html += '<span>'+splitComma[i]+'</span>';\r\n        }\r\n    }else{\r\n        html += '<span>'+items+'</span>';\r\n    }\r\n\r\n    html += '</div>';\r\n\r\n    return html;\r\n}\r\n\r\nexport function toastUi(msg){\r\n\r\n    var toast = document.getElementById('toast');\r\n\r\n    if(msg !== undefined){\r\n        toast.classList.add('on');\r\n        toast.innerText = msg;\r\n    }\r\n\r\n    setTimeout(function(){\r\n        toast.classList.remove('on');\r\n    }, 1000);\r\n}\r\n\r\nexport function toastUiClick(msg){\r\n\r\n    var toast = document.getElementById('toast');\r\n\r\n    if(msg !== undefined){\r\n        toast.classList.add('on');\r\n        toast.innerText = msg;\r\n    }\r\n}","import React from \"react\";\r\nimport { Link } from 'react-router-dom';\r\n// import { Modal, Backdrop } from '@material-ui/core';\r\nimport { TableContainer, Table, TableHead, TableRow, TableCell, Paper, TableBody } from '@material-ui/core';\r\n\r\nimport * as Common from '../../../../common';\r\nimport * as Fun from '../../../../fun';\r\n\r\nclass ProfileView extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <TableRow key={this.props.row.mc_compony}>\r\n                <TableCell component=\"th\" scope=\"rows\">\r\n                    {this.props.row.mc_compony}\r\n                </TableCell>\r\n                <TableCell align=\"center\"><Link to={`/test2/dita?id=${this.props.row.mc_idx}`} style={{textDecoration: 'none'}}>{this.props.row.mc_position}</Link></TableCell>\r\n                <TableCell align=\"right\"><div dangerouslySetInnerHTML={{__html : Fun.splitComma(this.props.row.mc_project_name)}}></div></TableCell>\r\n                {/* <TableCell align=\"right\">{value.mc_project_name}</TableCell> */}\r\n                <TableCell align=\"right\">{Fun.dateYmdFilter(this.props.row.mc_startdate)}</TableCell>\r\n                <TableCell align=\"right\">{Fun.dateYmdFilter(this.props.row.mc_enddate)}</TableCell>\r\n            </TableRow>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default ProfileView;","import React from \"react\";\r\nimport axios from 'axios';\r\n\r\nimport ProfileView from './profileComponent/profile.view';\r\n\r\nimport ReactLoading from 'react-loading';\r\nimport { TableContainer, Table, TableHead, TableRow, TableCell, Paper, TableBody, CircularProgress } from '@material-ui/core';\r\nimport { FirstPage, LastPage, KeyboardArrowRight, KeyboardArrowLeft} from '@material-ui/icons';\r\n\r\nimport * as Common from '../../../common';\r\nimport * as Fun from '../../../fun';\r\n\r\nclass Profile extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            itemsList : [],\r\n            resposnseCode : null,\r\n        }        \r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getProfileData();\r\n    }\r\n\r\n    getProfileData = async () => {\r\n        \r\n        var  totalCareer = [];\r\n\r\n        await axios.get(Common.API_SERVER+'/profile').then( response => {\r\n            \r\n            var items = response.data;\r\n\r\n            var resposnseCode = items.status;\r\n            this.setState({resposnseCode : items.status});\r\n\r\n            if(resposnseCode === 200){\r\n\r\n                var itemsList = items.data.carrer;\r\n\r\n                for(var i in itemsList){\r\n                    console.log(itemsList[i]);\r\n\r\n                    totalCareer.push({ idx : itemsList[i].mc_idx , start : itemsList[i].mc_startdate, end : itemsList[i].mc_enddate});\r\n                }\r\n                var date = Fun.callTest(totalCareer)\r\n                this.setState({itemsList : itemsList, date : date});\r\n\r\n\r\n                Fun.callTest(totalCareer);\r\n                \r\n            }else{\r\n                this.setState({itemsList : []});\r\n            }\r\n\r\n        })\r\n\r\n    }\r\n\r\n    // fileChange = function(e){\r\n\r\n    //     var file = e.target.files[0];\r\n\r\n    //     var size = 10 * 1024 * 1024;\r\n\r\n    //     console.log(size);\r\n    //     if(size <= file.size){\r\n    //         console.log('너무 커요');\r\n    //         return;\r\n    //     }\r\n    //     this.setState({\r\n    //         setfile : e.target.files[0]\r\n    //     })\r\n    // }\r\n\r\n    // testPost = function(){\r\n\r\n    //     const formData = new FormData();\r\n\r\n    //     formData.append('file', this.state.setfile);\r\n\r\n    //     axios.post(Common.API_SERVER+'/profile', formData).then(res => {\r\n    //         console.log(res);\r\n    //     }).catch(res => {\r\n    //         console.log(res);\r\n    //     });\r\n    // }\r\n\r\n    render(){\r\n\r\n        let { itemsList, resposnseCode, date } = this.state;\r\n        return(\r\n            <div>\r\n                {/* 자기 소개서나 프로젝트 별로 작업 할 곳 */}\r\n\r\n                <div>\r\n                    <h2>경력사항</h2> <div style={{textAlign: 'right'}}>총경력 : {date}</div>\r\n                    <TableContainer component={Paper}>\r\n                        <Table aria-label=\"simple table\">\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell>회사명 </TableCell>\r\n                                    <TableCell align=\"center\">직군</TableCell>\r\n                                    <TableCell align=\"right\">프로젝트</TableCell>\r\n                                    <TableCell align=\"right\">입사 일</TableCell>\r\n                                    <TableCell align=\"right\">종료 일</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                            {this.state.itemsList.length == 0 ? <CircularProgress color=\"secondary\" /> : itemsList.map((value, index) => (\r\n                                \r\n                                <ProfileView key={value.mc_idx} row={value} onRemove={this.handleRemove} onSelectRow={this.handleSelectRow} />\r\n                                \r\n                            ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                    {/* <input type=\"file\" onChange={(e) => this.fileChange(e)}></input>\r\n                    <button onClick={() => this.testPost()}>테스트</button> */}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport queryString from 'query-string';\r\nimport axios from 'axios';\r\nimport * as Common from '../../../../common';\r\nimport { TableContainer, Table, TableHead, TableRow, TableCell, Paper, TableBody, Box, TextField, CircularProgress} from '@material-ui/core';\r\nimport ProfileView from './profile.view';\r\nimport * as Fun from '../../../../fun';\r\nimport $ from 'jquery';\r\n\r\nclass ProfileDetail extends React.Component{\r\n\r\n    constructor(props){\r\n\r\n        super(props);\r\n\r\n        var query = queryString.parse(props.location.search);\r\n        \r\n        console.log('detail', query);\r\n\r\n        console.log(props);\r\n\r\n        this.state = {\r\n            idx : query.id,\r\n            itemsList : [],\r\n            resposnseCode : null,\r\n            title : {},\r\n            date : null,\r\n            dataSet : null,\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount(){\r\n        this.getProfileData();\r\n    }\r\n\r\n    getProfileData = async () => {\r\n        \r\n        var  totalCareer = [];\r\n\r\n        await axios.get(Common.API_SERVER+'/profile/'+ this.state.idx).then( response => {\r\n            \r\n            var items = response.data;\r\n\r\n            var resposnseCode = items.status;\r\n            this.setState({resposnseCode : items.status});\r\n\r\n            \r\n            if(resposnseCode === 200){\r\n\r\n                var itemsList = items.data.view;\r\n                var title = items.data.title;\r\n\r\n                console.error(title);\r\n                totalCareer.push({ idx : title.mc_idx , start : title.mc_startdate, end : title.mc_enddate});\r\n                console.log(itemsList);\r\n                this.setState({itemsList : itemsList, title : title, date : Fun.callTest(totalCareer)});\r\n                \r\n            }else{\r\n                this.setState({itemsList : []});\r\n            }\r\n\r\n        })\r\n\r\n    }\r\n\r\n    paperCustom = (index, list) => {\r\n        console.log($('.ui-'+index));\r\n\r\n        console.log(list);\r\n        $('.MuiPaper-root').removeClass('MuiPaper-elevation3');\r\n\r\n        if(index !== this.state.dataSet){\r\n            this.setState({dataSet : index});\r\n            $('.ui-'+index).addClass('MuiPaper-elevation3');\r\n        }else{\r\n            this.setState({dataSet : null});\r\n        }\r\n\r\n    }\r\n    render(){\r\n\r\n        let { itemsList, resposnseCode, title, date } = this.state;\r\n\r\n        console.log(this.state.dataSet)\r\n        return(\r\n            <div>\r\n                    <Box component=\"div\" m={1}>\r\n                        {title.mc_compony} <span>{date}</span>\r\n                    </Box>\r\n                    {\r\n                        resposnseCode == null ? <CircularProgress color=\"secondary\" /> : itemsList.map((value, index) => (\r\n                            <Paper elevation={1} className={`ui-${index}` + (this.state.dataSet === index ? ' on' : '')} onClick={ () => this.paperCustom(index, itemsList)}\r\n                            color=\"secondary.main\"\r\n                            >\r\n                                <div>\r\n                                    <div><span>프로젝트 명 : </span>{value.pro_content}</div>\r\n                                    <div><span>프로젝트 시작일 : </span>{Fun.dateYmdFilter(value.pro_start_date)}</div>\r\n                                    <div><span>프로젝트 종료일: </span>{Fun.dateYmdFilter(value.pro_end_date)}</div>\r\n                                    <div dangerouslySetInnerHTML={{__html : Fun.splitComma(value.pro_skill_set)}}></div>\r\n                                </div>\r\n                            </Paper>\r\n                        ))\r\n                    }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProfileDetail;","import React from 'react';\r\n\r\n\r\nclass Main extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                메인화면\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Main;","import React, { useEffect, useState } from 'react';\r\nimport io from 'socket.io-client';\r\nimport $ from 'jquery';\r\nimport * as Common from '../../../common';\r\nimport * as Fun from '../../../fun';\r\n\r\nvar socket = io.connect(Common.API_SERVER);\r\n\r\nclass Char extends React.Component{\r\n\r\n    constructor(props){\r\n\r\n        super(props);\r\n\r\n        this.state = {\r\n            name : '', \r\n            room : '',\r\n            state : false,\r\n            chatText : '',\r\n            messageList : [],\r\n            uid : localStorage.getItem('TOKEN_ID'),\r\n        }\r\n\r\n    }\r\n    /**\r\n     * 이걸 인용해서 chanel id도 만들고 채팅방 리스트와 함께 만들수 있다.\r\n     */\r\n    componentDidMount(){\r\n\r\n    }\r\n    \r\n        /**\r\n     * state에 변화가 일어났을 경우 발생하는 LifeCycle \r\n     */\r\n    componentWillMount(){\r\n\r\n        socket.on('chat message2', (msg) => {\r\n\r\n            this.setState({\r\n                'chatText' : '',\r\n            })\r\n\r\n            document.getElementById('chatInput').value = '';\r\n\r\n            var message = this.state.messageList;\r\n            console.log(msg);\r\n\r\n            message.push({'nickname' : msg.nickname , 'content' : msg.message, 'mUid' : msg.mUid});\r\n            \r\n            console.log(message);\r\n\r\n            var charList = document.getElementById('char-list');\r\n\r\n            this.setState({messageList : message });\r\n\r\n\r\n            var currentScroll = charList.scrollTop;\r\n            var endScroll = charList.scrollHeight;\r\n                  \r\n            /**\r\n             * 위치에 따라 스크롤의 높이가 달라진다.\r\n             */\r\n\r\n            if(this.state.uid == msg.mUid){\r\n                if(currentScroll < endScroll || currentScroll === 0){\r\n                    $('#char-list').scrollTop(endScroll);\r\n    \r\n                    console.log(endScroll);\r\n                }\r\n            }\r\n            \r\n        });\r\n    }\r\n\r\n    back = () => {\r\n        console.log(this.state.name);\r\n        // props.history.goBack();\r\n    }\r\n\r\n    inputChange = (event, state) => {\r\n        /**\r\n         * react에서 변수의 데이터를 담을 떄 change 함수를 사용\r\n         * event.target 도 있지만, event.currenttarget 을 사용하면 조금 더 정확한 데이터가 가능\r\n         * \r\n         */\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n\r\n    joinChating = () =>{\r\n\r\n        var message = [];\r\n        if(this.state.name.length != 0 && this.state.room.length != 0){\r\n\r\n            let data = {\r\n                'mUid' : this.state.uid,\r\n                'roomName' : this.state.room,\r\n                'nickname' : this.state.name,\r\n            }\r\n\r\n            if(data.nickname.length == 0){\r\n                return;\r\n            }\r\n\r\n            // 방생성은 같은방일 때 한번 \r\n            socket.emit('create room', data);\r\n\r\n            \r\n            socket.on('join room', (data) => {\r\n\r\n                message.push({'nickname' : this.state.name , 'content' : data.message, 'state' : 'join'});\r\n\r\n                this.setState({\r\n                    state : true\r\n                })\r\n\r\n                console.log(message);\r\n                if(data.status == '0000'){\r\n                    this.setState({\r\n                        messageList : message\r\n                    });\r\n                }else {\r\n                    this.setState({\r\n                        messageList : message\r\n                    });\r\n                }\r\n            });\r\n\r\n        }else{\r\n\r\n            if(this.state.name.length == 0){\r\n                Fun.toastUi('이름을 입력해주세요.');\r\n            }else if(this.state.room.length == 0){\r\n                Fun.toastUi('방 이름을 입력해 주세요.');\r\n            }\r\n        }\r\n    }\r\n\r\n    setChatting = () => {\r\n\r\n        var room = $('input[name=room]').val();\r\n        var name = $('input[name=name]').val();\r\n\r\n\r\n        console.log(1);\r\n        if(this.state.chatText == '' || this.state.chatText == null){\r\n            return;\r\n        }\r\n\r\n        var chating = {\r\n            'mUid' : this.state.uid,\r\n            'roomName' : room,\r\n            'nickname' : name,\r\n            'message' : this.state.chatText\r\n        }\r\n\r\n        socket.emit('chat message1', chating);\r\n    }\r\n\r\n    getListReturn = (value) => {\r\n\r\n        /**\r\n         * 조건에 따라 요소에 대한 선택과, 요소를 그릴 수 있는 방법이 있다.\r\n         * 1. function으로 return + dangerouslySetInnerHTML 하는 방법\r\n         * 2. 3항 연산자로 하는 방법\r\n         * 3. component를 활용해서 사용하는 방법\r\n         */\r\n        var html = ''\r\n        if(value.state === 'join'){\r\n            html += `<div>${value.content}</div>`;\r\n        }else{\r\n            html += `<div class=\"sender\">${value.nickname}</div>`;\r\n            html += `<div class=\"message\">${value.content}</div>`;\r\n        }\r\n\r\n        return html;\r\n    }\r\n    render(){\r\n\r\n        var style = {\r\n            inputStype : {\r\n                marginLeft : '5px',\r\n            },\r\n            textArea : {\r\n                border : '1px solid #F18C7E',\r\n            }\r\n        }\r\n    \r\n        const { name, room, state, chatText, messageList, uid } = this.state\r\n        return(\r\n            <div>\r\n                <div className=\"char-input\">\r\n                    <div className={(state == true ? 'on' : 'none') + ' here'}>\r\n                        <input onChange={(event) => this.inputChange(event, 'name')} name=\"name\"/>\r\n                        <input onChange={(event) => this.inputChange(event, 'room')} name=\"room\" style={style.inputStype}/>\r\n                        <button \r\n                            type=\"button\" \r\n                            className=\"submit-button\" \r\n                            onClick={(event) => this.joinChating()}>\r\n                            Join\r\n                        </button>\r\n                    </div>\r\n                    <div className={'char-textarea ' + (state == true ? 'on' : 'none')} style={style.textArea}>\r\n                        <textarea id=\"chatInput\" name=\"chatText\" onChange={(event) => this.inputChange(event, 'text')}>{chatText}</textarea>\r\n                        <button \r\n                            type=\"button\" \r\n                            className={'submit-button' + ((chatText == '' || chatText == null) ? ' off' : ' on')}\r\n                            onClick={(event) => this.setChatting()}\r\n                            disabled={chatText == '' || chatText == null ? true : false}>\r\n                            Submit\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"char-list\">\r\n                    <ul \r\n                        className={(messageList.length !== 0 ? 'on' : '')}\r\n                        id=\"char-list\">\r\n                    {/** 동적으로 생성할 li */\r\n                        messageList.length === 0 ? '' : messageList.map((value, index) => {\r\n                            return (\r\n                            <li \r\n                                className={\r\n                                (uid === value.mUid && value.state !== 'join' ? 'left' : 'right') + \r\n                                (value.state === 'join' && value.state !== undefined ? ' center' : '')}\r\n                                dangerouslySetInnerHTML={{__html : this.getListReturn(value)}}>\r\n                            </li>\r\n                            )\r\n                        })\r\n                    } \r\n                    </ul>\r\n                </div>\r\n                <button onClick={this.back}>뒤로가기</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Char;\r\n","import React from 'react';\r\n\r\n\r\nclass Header extends React.Component{\r\n\r\n\r\n    constructor(props){\r\n        super(props);\r\n    }   \r\n\r\n    render(){\r\n\r\n        let {calendarYM, today} = this.props;\r\n\r\n        return(\r\n            <div className=\"RCA-header-container\">\r\n                <h2 className=\"RCA-header-calendarYM RCA-header-middle\">\r\n                    {calendarYM.format(\"YYYY년MM월\")}\r\n                </h2>\r\n                <h3 className=\"RCA-header-today RCA-header-middle\">\r\n                    {today.format(\"YYYY-MM-DD\")}\r\n                </h3>\r\n                <ul className=\"RCA-header-buttons RCA-header-middle\">\r\n                    <li onClick={ () => { this.props.moveMonth(-1) } }>\r\n                        <i className=\"move-button left-img icon\"></i>\r\n                    </li>\r\n                    <li>\r\n                        이동\r\n                    </li>\r\n                    <li  onClick={ () => { this.props.moveMonth(1) } }>\r\n                        <i className=\"move-button right-img icon\"></i>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\n\r\n\r\nclass DataCalender extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n\r\n    dateToArray = (dates) => {\r\n        if(Array.isArray(dates)){\r\n            return dates\r\n        }else if(typeof dates === \"string\"){\r\n            return dates.split(',')\r\n        }else{\r\n            return [\"일\", \"월\", \"화\", \"수\", \"목\", \"금\", \"토\"]\r\n        }\r\n    }\r\n\r\n    mapArrayToDate = (dateArray) => {\r\n        try{\r\n          if(dateArray.length !== 7){\r\n            console.log(new Error(\"dates props must be had 7 date\"))\r\n            dateArray = [\"일\", \"월\", \"화\", \"수\", \"목\", \"금\", \"토\"]\r\n          }\r\n          \r\n          return dateArray.map((date, index) => {\r\n            const className = ()=>{\r\n              let className = \"RCA-calendar-date-component\";\r\n              if(index === 0){\r\n                return className + \" date-sun\"\r\n              }else if(index === 6){\r\n                return className + \" date-sat\"\r\n              }else{\r\n                return className + \" date-weekday\"\r\n              }\r\n            }\r\n            return (\r\n              <div className={className()} key={\"RCA-header-\"+date}>\r\n                {date}\r\n              </div>\r\n            )\r\n          })\r\n        }catch{\r\n          throw new Error (\"date must be string or component\")\r\n        }\r\n    }\r\n\r\n    render(){\r\n\r\n        return(\r\n            <div className=\"RCA-calendar-date-header\">\r\n                {this.mapArrayToDate(this.dateToArray(this.props.dates))}\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default DataCalender;","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nclass Week extends React.Component {\r\n \r\n    state = {}\r\n   \r\n    Days = (firstDayFormat,weekIndex) => {\r\n        const _days = [];\r\n     \r\n        for (let i = 0; i < 7; i++) {\r\n     \r\n          const Day = moment(firstDayFormat).add('d', i);\r\n          _days.push({\r\n            yearMonthDayFormat: Day.format(\"YYYY-MM-DD\"),\r\n            getDay: Day.format('D'),\r\n            isHolyDay: false,\r\n            weekIndex\r\n          });\r\n        }\r\n     \r\n        return _days;\r\n      }\r\n\r\n      mapDaysToComponents = (Days, calendarMonthYear, selectedDayFormat ,fn = () => { }) => {\r\n        const thisMonth = moment(calendarMonthYear);\r\n        \r\n        return Days.map((dayInfo, i) => {\r\n        \r\n                let className = \"date-weekday-label\";\r\n            \r\n                if (!thisMonth.isSame(dayInfo.yearMonthDayFormat,'month')) {\r\n                    className = \"date-notThisMonth\";\r\n                  } else if (i === 0) {\r\n                    className = \"date-sun\"\r\n                  }else if(i===6){\r\n                    className =\"date-sat\"\r\n                  }\r\n             \r\n                  if(moment(dayInfo.yearMonthDayFormat).isSame(selectedDayFormat,'day')){\r\n                    className = \"selected\"\r\n                  }\r\n             \r\n                  return (\r\n                    <div className={\"RCA-calendar-day \" + className}key={`RCA-${dayInfo.weekIndex}-${i}-day`}onClick={() => fn(dayInfo.yearMonthDayFormat)}>\r\n                      <label className=\"RCA-calendar-day-label\">\r\n                        {dayInfo.getDay}\r\n                      </label>\r\n                    </div>\r\n                  )\r\n            }\r\n        )\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <div className=\"RCA-calendar-week\">\r\n            {this.mapDaysToComponents(this.Days(this.props.firstDayOfThisWeekformat,this.props.weekIndex),\r\n                this.props.ymOfThisCalendar,\r\n                this.props.selected,\r\n                this.props.fn\r\n            )}\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\nexport default Week;","import React from 'react'\r\nimport DataCalender from './DataCalender'\r\nimport moment from 'moment'\r\nimport Week from './Week'\r\n\r\nclass Calendar extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {*} monthYear \r\n     * @param {*} selected \r\n     * @param {*} clickFn : callback event\r\n     */\r\n    Weeks = (monthYear,selected,clickFn) => {\r\n        const firstDayOfMonth = moment(monthYear).startOf('month');\r\n        const firstDateOfMonth = firstDayOfMonth.get('d');\r\n     \r\n        const firstDayOfWeek = firstDayOfMonth.clone().add('d', -firstDateOfMonth);\r\n        // const lastDayOfThisCalendar = dayOfThisCalendar.clone().add('d', 6 * 7);\r\n     \r\n        const _Weeks = [];\r\n     \r\n        for (let i = 0; i < 6; i++) {\r\n            _Weeks.push((\r\n                <Week key={`RCA-calendar-week-${i}`}\r\n                weekIndex={i}\r\n                ymOfThisCalendar={firstDayOfMonth.format(\"YYYY-MM\")}\r\n                firstDayOfThisWeekformat={firstDayOfWeek.clone().add('d', i * 7).format(\"YYYY-MM-DD\")}\r\n                selected={selected}\r\n                fn={clickFn}\r\n                />\r\n              ))\r\n        }\r\n        return _Weeks\r\n    }\r\n\r\n    render(){\r\n\r\n        return(\r\n            <div className=\"RCA-calendar-container\">\r\n                <DataCalender dates={[\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"]}/>\r\n                {this.Weeks(this.props.YM,this.props.selected,this.props.changeSelected)}\r\n            </div>\r\n        )\r\n        \r\n    }\r\n}\r\n\r\n\r\nexport default Calendar;","import React from 'react'\r\nimport moment from 'moment'\r\nimport Header from './Header'\r\nimport Calendar from './Calendar';\r\n\r\nclass Schedule extends React.Component{\r\n\r\n    constructor(props){\r\n\r\n        super(props);\r\n\r\n        \r\n        /**\r\n         * 부모 컨포먼트에서 오늘의 날짜를 해야하는 이유는 자식의 Calnder에도 데이터를 넘겨줘야하기 때문에\r\n         * 부모 컴포넌트에서 작업을 하고, 해당 하는 Event를 사용한다.\r\n         */\r\n        this.state = {\r\n            calendarYM : moment(),\r\n            today : moment(),\r\n            selected : moment().format(\"YYYY-MM-DD\")\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 하위 컴포넌스 전달시 defult의 값\r\n     */\r\n    // static defaultProps = {\r\n    //     clickFn : (state)=>{\r\n    //         console.log(state);\r\n    //     }\r\n    // }\r\n\r\n    clickFn = (state) => {\r\n        console.log(state);\r\n    }\r\n    /**\r\n     * @param {*} month : 해당 날짜를 전달\r\n     * \r\n     * 자식 컴포넌스에 이벤트를 전달 및, state 값 변경\r\n     */\r\n    moveMonth = (month) => {\r\n        this.setState({\r\n            calendarYM : this.state.calendarYM.add(month,'M'),\r\n        })\r\n\r\n        console.log(this.state.calendarYM.format('YYYY-MM'));\r\n\r\n        let data = this.state.calendarYM.format('YYYY-MM');\r\n\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {*} clickedDate : 선택한 날짜의 데이터\r\n     * \r\n     * click event 발생할 경우 발생하는 event\r\n     * 데이터 초기화\r\n     */\r\n    changeSelected = (clickedDate) =>{\r\n \r\n        \r\n        if(moment(clickedDate).isSame(this.state.selected,'day')){\r\n            this.props.clickFn(clickedDate);\r\n            return;\r\n        }\r\n \r\n        this.setState({\r\n            selected : clickedDate\r\n        })\r\n \r\n        /**\r\n         * clickFn 함수 \r\n         */\r\n        this.clickFn(clickedDate);\r\n        \r\n        /**\r\n         * moment 함수 \r\n         * isBefore(date, key) : defult key == 'day'\r\n         * 작은 지 여부, key 값에 따라서 true / false 를 탄다\r\n         * \r\n         * isAfter(date, key) : defult key == 'day'\r\n         * 큰 지 여부, key 값에 따라서 true / false 를 탄다\r\n         */\r\n        if(moment(clickedDate).isBefore(this.state.calendarYM,'month')){\r\n            this.moveMonth(-1);\r\n        }else if(moment(clickedDate).isAfter(this.state.calendarYM,'month')){\r\n            this.moveMonth(1);\r\n        }\r\n    }\r\n\r\n    render(){\r\n\r\n        let {calendarYM, today} = this.state;\r\n\r\n        return(\r\n            <div className=\"test-layout\">\r\n                <div className=\"RCA-app-container\">\r\n                    <Header \r\n                        calendarYM={calendarYM} \r\n                        today={today} \r\n                        moveMonth={this.moveMonth}>\r\n                    </Header>\r\n                    <Calendar \r\n                        YM={calendarYM.format(\"YYYY-MM-DD\")}                        \r\n                        selected={this.state.selected}\r\n                        changeSelected={this.changeSelected}>\r\n                    </Calendar>\r\n                </div>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default Schedule;","import React from 'react'\r\nimport axios from 'axios'\r\n\r\nclass Bible extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        let BIBLE_ID = localStorage.getItem('BIBLE_ID') ? localStorage.getItem('BIBLE_ID') : null;\r\n        let WIZ_ID = localStorage.getItem('WIZ_ID') ? localStorage.getItem('WIZ_ID') : null;\r\n        let BIBLE_YN = localStorage.getItem('BIBLE_YN') ? localStorage.getItem('BIBLE_YN') : 'N';\r\n\r\n        let already = null;\r\n\r\n        if(BIBLE_ID === null && WIZ_ID === null){\r\n            BIBLE_ID = Math.floor(Math.random() * 31102);\r\n            WIZ_ID = Math.floor(Math.random() * 100000);\r\n            already = 'N';\r\n        }else{\r\n            already = 'Y';\r\n        }\r\n        \r\n\r\n        console.log(BIBLE_ID);\r\n        console.log(WIZ_ID);\r\n\r\n        this.state = {\r\n            'bible_id' : BIBLE_ID,\r\n            'wiz_id' : WIZ_ID,\r\n            'bible' : {},\r\n            'bible_yn' : BIBLE_YN,\r\n            'isLoding' : false,\r\n            'already' : already\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n     \r\n        if(this.state.already == 'Y'){\r\n            this.getBibleApi();\r\n        }\r\n    }\r\n\r\n    getBibleApi = () => {\r\n\r\n        axios.get('https://project-setting.s3.ap-northeast-2.amazonaws.com/json/bible.json')\r\n        .then( response => {\r\n            console.log(response);\r\n        \r\n            let items = response;\r\n\r\n            if(items.status === 200){\r\n\r\n                console.log(this.state);\r\n                let bibleYn = this.state.bible_yn;\r\n\r\n                if(bibleYn == 'N'){\r\n\r\n                    localStorage.setItem('BIBLE_ID', this.state.bible_id);\r\n                    localStorage.setItem('WIZ_ID', this.state.wiz_id);\r\n                    localStorage.setItem('BIBLE_YN', 'Y');\r\n\r\n                    bibleYn = 'Y';   \r\n                }\r\n\r\n                console.log(this.state.bible_id);\r\n                console.log(items.data.bible_korHRV[this.state.bible_id]);\r\n\r\n                this.setState({\r\n                    'bible' : items.data.bible_korHRV[this.state.bible_id],\r\n                    'bible_yn' : bibleYn,\r\n                    'isLoding' : true\r\n                })\r\n\r\n\r\n\r\n\r\n            }else{\r\n                console.log('error');\r\n            }\r\n        })\r\n    }\r\n\r\n    selectBibleContent = () => {\r\n\r\n        let BIBLE_ID = localStorage.getItem('BIBLE_ID') ? localStorage.getItem('BIBLE_ID') : null;\r\n        let WIZ_ID = localStorage.getItem('WIZ_ID') ? localStorage.getItem('WIZ_ID') : null;\r\n\r\n        if(BIBLE_ID === null && WIZ_ID === null){\r\n            BIBLE_ID = Math.floor(Math.random() * 31102);\r\n            WIZ_ID = Math.floor(Math.random() * 100000);\r\n        }\r\n        this.setState({\r\n            'bible_id' : BIBLE_ID,\r\n            'wiz_id' : WIZ_ID,\r\n            'already' : 'Y',\r\n        })\r\n\r\n        this.getBibleApi();\r\n    }\r\n\r\n    bibleContent = () => {\r\n\r\n        localStorage.removeItem('BIBLE_ID');\r\n        localStorage.removeItem('WIZ_ID');\r\n        localStorage.removeItem('BIBLE_YN');\r\n\r\n        this.setState({\r\n            'bible_yn' : 'N',\r\n            'isLoding' : false\r\n        })\r\n    }\r\n\r\n    render(){\r\n\r\n        const { bible,  bible_yn:bibleYn, isLoding} = this.state;\r\n\r\n        return(\r\n            <div>\r\n                성경\r\n                {\r\n                    (() => {\r\n                       if(bibleYn == 'N'){\r\n                            return (\r\n                                <button onClick={ () => { this.selectBibleContent() } }>말씀 뽑기</button>\r\n                            )\r\n                       }else{\r\n\r\n                            if(isLoding == true){\r\n                                return(\r\n                                    <div>\r\n                                        올 해 성도님에게 주신 말씀은 \r\n                                        <div>{bible.book} {bible.chapter} 장 {bible.verse} 절 {bible.content} 입니다.</div>\r\n\r\n                                        해당 말씀을 가지고 나아갈 수 있는 한해 되길 기도합니다.\r\n\r\n                                        <div>\r\n                                            <button onClick={ () => this.bibleContent() }>다시 뽑기</button>\r\n                                        </div>\r\n                                    </div>\r\n                                )\r\n                            }else{\r\n                                return(\r\n                                    <div>잠시만 기다려 주세요.</div>\r\n                                )\r\n                            }\r\n                       }\r\n                    })()\r\n                }\r\n                \r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Bible;","import React from \"react\";\r\nimport { Card, CardActionArea, CardActions, CardContent, CardMedia, Typography } from '@material-ui/core';\r\nimport { logo } from '../../../../logo.svg';\r\n\r\nclass person extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        console.log(window.location.origin );\r\n    }\r\n\r\n    render(){\r\n\r\n        const style = {\r\n            media : {\r\n                width: 'auto',\r\n                height: 'auto',\r\n                maxWidth: '100px',\r\n                maxHeight: '100px',\r\n                border: 'none', margin: '0', padding: '0', display: 'inline',\r\n                borderRadius: '10px'\r\n            }\r\n        }\r\n        return(\r\n            <div>\r\n                 {/* 개인 정보를 적는 컴포넌트 */}\r\n                 <Card>\r\n                    <CardActionArea>\r\n                        \r\n                        {/** require('./LOGO.png') image를 추가할 경우는 require를 이용해서 사용한다. */}\r\n                        <CardMedia\r\n                        component=\"img\"\r\n                        alt=\"Contemplative Reptile\"\r\n                        height=\"100px\"\r\n                        width=\"100px\"\r\n                        image={require('./LOGO.png')}\r\n                        title=\"Contemplative Reptile\"\r\n\r\n                        style={style.media}\r\n                        />\r\n                        <CardContent>\r\n                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                            신진섭\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                            프론트개발자를 지향하지만, 풀스택 개발을 원한다.\r\n                        </Typography>\r\n                        </CardContent>\r\n                    </CardActionArea>\r\n                </Card>\r\n                <div className=\"sssss\">\r\n                    <dl>\r\n                        <dt className=\"blog\">Blog : </dt>\r\n                        <dd><a href=\"https://blog.naver.com/sksksms2\" target=\"_blank\">https://blog.naver.com/sksksms2</a></dd>\r\n                        <dt className=\"github\">Git : </dt>\r\n                        <dd><a href=\"https://github.com/yeo11200\"  target=\"_blank\">https://github.com/yeo11200</a></dd>\r\n                        <dt className=\"email\">Email : </dt>\r\n                        <dd><a href=\"mailto:yeo11200@hanmail.net\">yeo11200@hanmail.net</a></dd>\r\n                    </dl>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default person;","/**\r\n * Route의 component의 데이터를 export만 시키기 위한 js\r\n */\r\nimport React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { Profile, ProfileDetail, Main, Char, Schedule, Bible } from '../route/router';\r\nimport Person from './board/profileComponent/person';\r\n\r\n\r\nclass Index extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        const randomId = Math.floor(Math.random() * 100000);\r\n\r\n        const nowRandomId = localStorage.getItem('TOKEN_ID');\r\n\r\n        console.log(randomId);\r\n\r\n        if(randomId !== nowRandomId){\r\n            localStorage.setItem('TOKEN_ID', randomId);\r\n        }\r\n        \r\n    }\r\n    render(){\r\n\r\n        console.log('Index');\r\n        return(\r\n            <div>\r\n                <Person></Person>\r\n                {/**\r\n                 * 해당 url에 대한 컴포넌트를 지정할 때 사용을 한다.\r\n                 * render function () { return <>} 이렇게 쓰는 방법\r\n                 * component = {component }를 사용하는 방법이다\r\n                 */}\r\n                <Route path=\"/test\" render={() => (\r\n                            <div>\r\n                                <div className=\"blog-info\">\r\n                                    <dl>\r\n                                        <dd>{this.props.name}</dd>\r\n                                        <dd>React</dd>\r\n                                        <dd>Express</dd>\r\n                                        <dd>FireBase</dd>\r\n                                        <dd>MariaDB</dd>\r\n                                        <dd>AWS RDS</dd>\r\n                                        <dd>Git Hub</dd>\r\n                                        <dd>material-ui</dd>\r\n                                        <dd>AWS S3</dd>\r\n                                    </dl>\r\n                                </div>\r\n                \r\n                                <div className=\"blog-connenct\">\r\n                \r\n                                </div>\r\n                            </div>\r\n                )}></Route>\r\n                    <Route exact path=\"/\" component={ Main }></Route>\r\n                    <Route exact path=\"/test2\" component={ Profile }></Route>\r\n                    <Route exact path=\"/test3\" component={ Char }></Route>\r\n                    <Route path=\"/test2/dita\" component={ ProfileDetail }></Route>\r\n                    <Route path=\"/schedule\" component={ Schedule }></Route>\r\n                    <Route path=\"/bible\" component={ Bible }></Route>\r\n                    \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Index;","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\n\r\nimport {\r\n  BrowserRouter as Route,\r\n  Router,\r\n  Link \r\n} from 'react-router-dom';\r\n \r\nimport Header from './new.contents/_includes/header';\r\n\r\nimport Index from './new.contents/moduel/index';\r\n\r\nimport '../src/css/common.css?v=2020';\r\n\r\n\r\nfunction App() {\r\n  \r\n  return (\r\n    // basename={process.env.PUBLIC_URL} : 기본적인 경로는 유지 됨\r\n    <Route className=\"container\" basename={process.env.PUBLIC_URL} >\r\n      <div id=\"toast\"></div>\r\n      <Header></Header>\r\n      <Index></Index>\r\n    </Route>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nReactDOM.render(<Router basename={process.env.PUBLIC_URL}>< App /></Router>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";"],"sourceRoot":""}