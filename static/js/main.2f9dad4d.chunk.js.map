{"version":3,"sources":["logo.svg","header/header.js","fun.js","Page/write/profileWrite.js","Page/list/list.js","Page/profile.js","Page/blog.js","Page/schedule.js","content/moduel.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","props","headerClick","e","console","log","this","setState","classNamePush","state","aa","className","exact","to","onClick","React","Component","a","careerFirstDate","careerFirstDateEnd","Date","careerFirstDateStart","careerSecDateEnd","careerSecDateStart","firstMonth","getTime","day","secondMonth","allCareer","Math","ceil","data","yearCareer","floor","dateYmdFilter","date","split","profileWrite","prop","proTyle","createRef","proTitle","proContent","submitProfile","summerChange","text","$","summernote","ref","value","id","defaultProps","list","proFile","getList","axios","get","COMMON","then","response","items","profile","isLoding","catch","menuClickOn","menu","menuToggle","menuOn","careerDate","Fun","carrer","map","index","mc_compony","mc_startdate","mc_enddate","mc_position","mc_project_name","project","value1","pro_title","pro_content","pro_start_date","pro_end_date","pro_skill_set","name","PropTypes","string","blog","schedule","getTitle","params","moduel","path","render","component","Profile","App","basename","process","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.2f9dad4d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import React from 'react';\r\nimport { Router, Link} from 'react-router-dom';\r\nimport '../css/common.css';\r\n\r\nclass Header extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            aa : 1,\r\n            classNamePush : null,\r\n            // firebaseConfig = {\r\n            //     apiKey: \"AIzaSyAzdEI_b6zQ1DcmMsXj1qglZgtt3jEWlKk\",\r\n            //     authDomain: \"todolist-f3d53.firebaseapp.com\",\r\n            //     databaseURL: \"https://todolist-f3d53.firebaseio.com\",\r\n            //     projectId: \"todolist-f3d53\",\r\n            //     storageBucket: \"todolist-f3d53.appspot.com\",\r\n            //     messagingSenderId: \"963413121103\",\r\n            //     appId: \"1:963413121103:web:54c9fe1ed174adb119f23a\",\r\n            //     measurementId: \"G-00L2B594G4\"\r\n            //   },\r\n        \r\n        }\r\n    }\r\n\r\n    headerClick = function(e) {\r\n        console.log(e);\r\n        this.setState({classNamePush : e});\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <ul className=\"header-ui\">\r\n                    <li className={this.state.classNamePush == 'zzzz' ? 'on' : ''}>\r\n                        {/** \r\n                         * exact를 사용하면 /일떄만 나오고 나머지는 안나온다. \r\n                         * 비슷한 url에 정확하게를 원한다면 exact를 사용한다.\r\n                         */}\r\n                        <Link exact to=\"/zzzz1\" onClick={(e) => {this.headerClick ('zzzz')}}>zzzz</Link>\r\n                    </li>\r\n                    <li className={this.state.classNamePush == 'about' ? 'on' : ''}>\r\n                        {/**\r\n                         * Link는 URL를 넣을 때 사용한다.\r\n                         */}\r\n                        <Link exact to=\"/about\" onClick={(e) => {this.headerClick ('about')}}>이력서</Link>\r\n                    </li>\r\n                    <li className={this.state.classNamePush == 'blog' ? 'on' : ''}>\r\n                        <Link to=\"/blog\" onClick={(e) => {this.headerClick ('blog')}}>Blog 정보</Link>\r\n                    </li>\r\n                    <li className={this.state.classNamePush == 'schedule' ? 'on' : ''}>\r\n                        <Link to=\"/schedule\" onClick={(e) => {this.headerClick ('schedule')}}>scedlue</Link>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header;","// export를 해서 내보내줘야한다\r\n// 받을땐 import\r\nexport function a(){\r\n    let careerFirstDate = ['2019-01-01', '2019-05-31'];\r\n    let careerSecDate = ['2019-07-17'];\r\n    \r\n    let careerFirstDateEnd = new Date(careerFirstDate[1]);\r\n    let careerFirstDateStart = new Date(careerFirstDate[0]);\r\n\r\n    let careerSecDateEnd = new Date();\r\n    let careerSecDateStart = new Date(careerSecDate[0]);\r\n    // mssecond를 하루로 만드는 공식\r\n    let day = 24 * 60 * 60 * 1000;\r\n    // mssecond를 한달로 만드는 공식\r\n    let month = day * 30;\r\n\r\n    let firstMonth = (careerFirstDateEnd.getTime() - careerFirstDateStart.getTime()) / month;\r\n    let secondMonth = (careerSecDateEnd.getTime() - careerSecDateStart.getTime()) / month;\r\n\r\n\r\n    let allCareer = Math.ceil(firstMonth + secondMonth);\r\n    let data = null;\r\n\r\n    if(allCareer > 13){\r\n\r\n        var yearCareer = Math.floor((allCareer / 12));\r\n        data = Math.floor(allCareer / 12) +'년' + (allCareer % (12 * yearCareer)) +'개월';\r\n    }else{\r\n        data = allCareer + '개월';\r\n    }\r\n\r\n    return data;\r\n}\r\n\r\nexport function dateYmdFilter(date){\r\n\r\n    let dateYmd = null;\r\n    let dateA = null;\r\n\r\n    if(date == null){\r\n\r\n        dateYmd = 'Now';\r\n    }else{\r\n        dateA = date.split('T');\r\n\r\n        dateYmd = dateA[0];\r\n    }\r\n\r\n    return dateYmd;\r\n}\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport axios from 'axios';\r\n/**\r\n * jquery 사용하는 라이브러리\r\n */\r\nimport $ from 'jquery';\r\nimport Summernote from 'summernote';\r\n// import 'react-summernote/dist/react-summernote.css'; // import styles\r\n// import 'react-summernote/lang/summernote-ru-RU'; // you can import any other locale\r\n\r\n// Import bootstrap(v3 or v4) dependencies\r\n\r\n\r\nexport class profileWrite extends Component {\r\n\r\n    constructor(prop){\r\n        super(prop);\r\n    }\r\n\r\n    \r\n    /**\r\n     * ref 생성 = React.createRef\r\n     * ref의 value 값을 가져오기 위해선 current.value\r\n     * ref의 상태 및 이벤트 추가는 current\r\n     * 받아올땐 this.변수로 받아준다\r\n     */\r\n    proTyle = React.createRef();\r\n    proTitle = React.createRef();\r\n    proContent = React.createRef();\r\n\r\n    submitProfile = function(){\r\n\r\n        // var postData = {\r\n        //     'pro_type' : this.proTyle.current.value,\r\n        //     'pro_title' : this.proTitle.current.value\r\n        // }\r\n\r\n        // axios.post('http://localhost:8004/profile', postData).then(response => {\r\n\r\n        // });\r\n    }\r\n\r\n    summerChange = (text) =>{\r\n        console.log(text);\r\n    }\r\n\r\n    /**\r\n     * componentWillMount : render 전에 실행이 된다 그래서 에러가 해당하는 id나 class로 사용하는 event를 사용하면 에러가 발생\r\n     * componentDidMount : render 이후 발생하는 id와 class를 이용한 event를 사용하기 좋다.\r\n     */\r\n    componentDidMount(){\r\n        console.log(\"componentDidMount\");\r\n\r\n        $('#summernote').summernote();\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n                {/**\r\n                 * 글쓰기 전용\r\n                 * profile type : 포토폴리오, 자기소개서, 희망 팀, 경력증명서\r\n                 * profile Title : 포토폴리오의 제목\r\n                 * profile Content : 포토폴리오 내용\r\n                 */}\r\n                <div>\r\n                    <select ref={this.proTyle}>\r\n                        <option value=\"portFolio\">포트폴리오</option>\r\n                        <option value=\"aboutMe\">자기소개서</option>\r\n                        <option value=\"hopeTeam\">희망하는 팀</option>\r\n                        <option value=\"career\">경력증명서</option>\r\n                    </select><br></br>\r\n\r\n                    <input ref={this.proTitle}></input>\r\n                    <div id=\"editor\"></div>\r\n                    {/**\r\n                     * summernote props로 옵션을 선택할 수 있다는 장점이 있다.\r\n                     * https://github.com/summernote/react-summernote -> ex 경로\r\n                     */}\r\n                     <div id=\"summernote\"></div>\r\n                    <button onClick={() => {\r\n                        this.submitProfile();\r\n                    }}>전송</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nprofileWrite.defaultProps = {\r\n    \r\n}\r\nexport default profileWrite\r\n","import React, { Component } from 'react'\r\n\r\nexport default class list extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        console.log(props);\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport PropTypes, { array } from 'prop-types';\r\nimport axios from 'axios';\r\n// 외부에 있는 React를 불러오기 위해서 사용을 한다.\r\n// 단 별칭을 지어주는게 좋다.\r\nimport * as Fun from '../fun';\r\nimport ProfileWrite from './write/profileWrite';\r\nimport * as COMMON from '../common';\r\nimport List from './list/list';\r\n\r\nexport default class proFile extends React.Component {\r\n\r\n    // 제일 먼저 시작될 함수\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            menuOn :  'info',\r\n            profile : [],\r\n            careerDate : Fun.a(),\r\n            isLoding : false,\r\n        }\r\n        \r\n    }\r\n\r\n    getList = async () => {\r\n        await axios.get(COMMON.API_SERVER + '/profile', {}).then((response) => {\r\n            var items = response.data;\r\n            this.setState({\r\n                profile : items.data,\r\n                isLoding : true\r\n            })\r\n\r\n            console.log(this.state.profile);\r\n        }).catch(response => {\r\n            this.setState({\r\n                profile : [],\r\n                isLoding : false\r\n            })\r\n        });\r\n    }\r\n\r\n    // component가 시작되기 전에 사용할 함수\r\n    async componentDidMount () {\r\n        console.log(this.state.menuOn);\r\n\r\n        console.log(this.state);  \r\n        await this.getList();\r\n\r\n        console.log(this.state);       \r\n    }\r\n\r\n\r\n\r\n    menuClickOn = function(menu){\r\n        let menuToggle = null;\r\n\r\n        // state 값을 받아와서 toggle 형태로 받아준다.\r\n        if(menu == 'info'){\r\n            menuToggle = (this.state.menuOn === 'info') ? '' : 'info';\r\n        }else if(menu === 'project'){\r\n            menuToggle = (this.state.menuOn === 'project') ? '' : 'project';\r\n        }else if(menu === 'announce'){\r\n            menuToggle = (this.state.menuOn === 'announce') ? '' : 'announce';\r\n        }\r\n        this.setState({menuOn : menuToggle});\r\n    }\r\n    render(){\r\n        const {profile, isLoding } = this.state;\r\n\r\n        console.log(profile);\r\n        return(\r\n            <div className=\"profile-info\">\r\n                <div className=\"profile-about-title\">\r\n                    <span>항상 노력하는 지원자 신진섭입니다.</span>\r\n                    <span>총경력 : {this.state.careerDate}</span>\r\n                </div>\r\n                <ul className=\"profile-menu\">\r\n                    <li onClick={ () => { this.menuClickOn('info')}}\r\n                        className={(this.state.menuOn === 'info' ? 'on' : '')}\r\n                    >\r\n                        자기소개서\r\n                    </li>\r\n                    <li onClick={ () => { this.menuClickOn('project')}}\r\n                        className={(this.state.menuOn === 'project' ? 'on' : '')}\r\n                    >\r\n                        프로젝트경험\r\n                    </li>\r\n                    <li onClick={ () => { this.menuClickOn('announce')}}\r\n                        className={(this.state.menuOn === 'announce' ? 'on' : '')}\r\n                    >\r\n                        발표내용\r\n                    </li>\r\n                </ul>\r\n                <List list={profile}></List>\r\n                <ul>\r\n                {\r\n                    isLoding ? profile.carrer.map((value, index) =>{\r\n                        return (\r\n                            <li>\r\n                                <div>\r\n                                    <span>{value.mc_compony}</span>\r\n                                </div>\r\n                                <div>\r\n                                    <span>{Fun.dateYmdFilter(value.mc_startdate)}</span> ~ \r\n                                    <span>{Fun.dateYmdFilter(value.mc_enddate)}</span>\r\n                                </div>\r\n                                <div>\r\n                                    <span>{value.mc_position}</span>\r\n                                </div>\r\n                                <div>\r\n                                    <span>{value.mc_project_name}</span>\r\n                                </div>\r\n                                \r\n                    \r\n                            {\r\n                                // map {} => 안에는 return () 이 필수로 들어가야한다. \r\n                                // react에서는 {} 안에는 습관처럼 return을 적자\r\n                                value.project.map((value1, index) => {\r\n                                    return (\r\n                                        <ul>\r\n                                            <span className=\"projectTitle\">{index + 1}{value1.pro_title}</span>\r\n                                            <li>{value1.pro_content}</li>\r\n                                            <li>{Fun.dateYmdFilter(value1.pro_start_date)}</li>\r\n                                            <li>{Fun.dateYmdFilter(value1.pro_end_date)}</li>\r\n                                            <li>{value1.pro_skill_set}</li>\r\n                                        </ul>\r\n                                    )\r\n                                })\r\n                            }\r\n                        \r\n                            </li>\r\n                        )\r\n                    }) : <li>Loding</li>\r\n                }\r\n                </ul>\r\n                <div className={\"profile-about-me \" + (this.state.menuOn === 'info' ? 'on' : '')}>\r\n                    <dl>\r\n                        <dt>신진섭 </dt>\r\n                        <dd>\r\n                            <p>저는 <code>_ _ _ _ _</code> 개발자가 되고 싶습니다.</p>\r\n                            <div>\r\n                                1. 테스트 코드를 짤 짜는<br></br>\r\n                                2. 완성보다 버그를 줄이는<br></br>\r\n                                3. 책임감을 가지는<br></br>\r\n                                4. 남들보다 혹시 남과 같이 노력하는<br></br>\r\n                            </div> \r\n                        </dd>\r\n                        <dd>\r\n                            <p>저는 <code>_ _ _ _ _</code> 팀원이 되고 싶습니다.</p>\r\n                            <div>\r\n                                1. 테스트 코드를 짤 짜는<br></br>\r\n                                2. 완성보다 버그를 줄이는<br></br>\r\n                                3. 책임감을 가지는<br></br>\r\n                                4. 남들보다 혹시 남과 같이 노력하는<br></br>\r\n                            </div> \r\n                        </dd>\r\n                    </dl>\r\n                </div>\r\n                <div className={\"profile-about-me \" + (this.state.menuOn === 'project' ? 'on' : '')}>\r\n                    <dl>\r\n                        <dt>프로젝트 경험</dt>\r\n                        <dd>\r\n                            <div>\r\n                                <span>\r\n                                    7. 에듀서브 수업 마이그레이션\r\n                                    & React Native Web View\r\n                                </span>\r\n                            </div>\r\n                            <div>\r\n                                <span>2020.06 ~ ing</span>\r\n                            </div>\r\n                            <div>\r\n                                <span>\r\n                                    <dl>\r\n                                        <dt>php 7.2</dt>\r\n                                        <dt>angular 1.5</dt>\r\n                                        <dt>javascript</dt>\r\n                                        <dt>aws</dt>\r\n                                        <dt>mariaDB 10.5</dt>\r\n                                        <dt>React Native 0.61</dt>\r\n                                        <dt>Npm</dt>\r\n                                    </dl>\r\n                                </span>\r\n                                <p>프로젝트 내용</p>\r\n                            </div>\r\n                        </dd>\r\n                        <dd>\r\n                            <div>\r\n                                <span>6. 에듀서브 커뮤니티 마이그레이션</span>\r\n                            </div>\r\n                            <div>\r\n                                <span>2020.01 ~ 2020.03</span>\r\n                            </div>\r\n                            <div>\r\n                                <span>\r\n                                    <dl>\r\n                                        <dt>php 7.2</dt>\r\n                                        <dt>angular 1.5</dt>\r\n                                        <dt>javascript</dt>\r\n                                        <dt>aws</dt>\r\n                                        <dt>mariaDB 10.5</dt>\r\n                                        <dt>git</dt>\r\n                                        <dt>C.I</dt>\r\n                                    </dl>\r\n                                </span>\r\n                                <p>프로젝트 내용</p>\r\n                            </div>\r\n                        </dd>\r\n                        <dd>\r\n                            <span>5. 프로젝트 경험</span>\r\n                            <div>\r\n                                <p>사용한 기술</p>\r\n                                <p>프로젝트 내용</p>\r\n                            </div>\r\n                        </dd>\r\n                        <dd>\r\n                            <span>4. 프로젝트 경험</span>\r\n                            <div>\r\n                                <p>사용한 기술</p>\r\n                                <p>프로젝트 내용</p>\r\n                            </div>\r\n                        </dd>\r\n                        <dd>\r\n                            <span>3. 프로젝트 경험</span>\r\n                            <div>\r\n                                <p>사용한 기술</p>\r\n                                <p>프로젝트 내용</p>\r\n                            </div>\r\n                        </dd>\r\n                        <dd>\r\n                            <span>2. 프로젝트 경험</span>\r\n                            <div>\r\n                                <p>사용한 기술</p>\r\n                                <p>프로젝트 내용</p>\r\n                            </div>\r\n                        </dd>\r\n                        <dd>\r\n                            <span>1. 프로젝트 경험</span>\r\n                            <div>\r\n                                <p>사용한 기술</p>\r\n                                <p>프로젝트 내용</p>\r\n                            </div>\r\n                        </dd>\r\n                    </dl>\r\n                </div>\r\n                <div className={\"profile-about-me \" + (this.state.menuOn === 'announce' ? 'on' : '')}>\r\n                    <dl>\r\n                        <dt>발표</dt>\r\n                        <dd>\r\n                            1. 발표 제목\r\n                            <span> 발표 ppt url</span>\r\n                        </dd>\r\n                    </dl>\r\n                </div>\r\n                {/**\r\n                 * 글쓰기 포맷\r\n                 * 글쓰기시 활성화 component\r\n                 * writer 클릭시 class 활성화 active\r\n                 */}\r\n                 <div>\r\n                     <ProfileWrite></ProfileWrite>\r\n                 </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n// props의 타입을 지정해준다\r\n// 부모로 부터 받은 값을 이야기한다\r\nproFile.defaultProps = {\r\n    name: PropTypes.string,\r\n}\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nclass blog extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"blog-info\">\r\n                    <dl>\r\n                        <dd>{this.props.name}</dd>\r\n                        <dd>React</dd>\r\n                        <dd>Express</dd>\r\n                        <dd>FireBase</dd>\r\n                        <dd>MariaDB</dd>\r\n                        <dd>AWS RDS</dd>\r\n                        <dd>Git Hub</dd>\r\n                    </dl>\r\n                </div>\r\n\r\n                <div className=\"blog-connenct\">\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nblog.propTypes = {\r\n    name:PropTypes.string = 'kk'\r\n};\r\n\r\n\r\nexport default blog;\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport axios from 'axios';\r\n\r\nexport class schedule extends Component {\r\n\r\n    constructor(props){\r\n\r\n        super(props);\r\n\r\n        this.state = {\r\n            getTitle : 'zzzz'\r\n        };\r\n    }\r\n\r\n    /**\r\n     * React Component가 실행할 때 제일 먼저 실행될 함수\r\n     * 주로 비동기 통신 할 때 사용한다.\r\n     * arrow function 일 경우 setStete가 먹힌다.\r\n     * 원인은 파악 중\r\n     */\r\n    componentWillMount(){\r\n        axios.get('https://api.ip.pe.kr/', { params : {id : 1}}).then((response) => {\r\n            console.log(response.data);\r\n            this.setState({ \r\n                getTitle: response.data\r\n              });\r\n            // this.setState({getTitle : response.data});\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.getTitle}\r\n                {this.aa}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nschedule.defaultProps = {\r\n    name: PropTypes.string,\r\n}\r\nexport default schedule\r\n","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport { Profile, Blog, Schedule } from './index';\r\nclass moduel extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        \r\n        this.state = {\r\n\r\n        }\r\n    }\r\n    render(){\r\n        return(\r\n            <div>\r\n                {/**\r\n                 * 해당 url에 대한 컴포넌트를 지정할 때 사용을 한다.\r\n                 * render function () { return <>} 이렇게 쓰는 방법\r\n                 * component = {component }를 사용하는 방법이다\r\n                 */}\r\n                <Route path=\"/zzzz1\" render={() => (\r\n                    <h3>Render Test</h3>\r\n                )}></Route>\r\n                <Route path=\"/about\" component={Profile}></Route>\r\n                <Route path=\"/blog\" component={ () => <Blog name=\"name\"></Blog>}></Route>\r\n                <Route path=\"/schedule\" component={ () => <Schedule name=\"schedule\"></Schedule>}></Route>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default moduel;","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\n\r\nimport {\r\n  BrowserRouter as Route,\r\n  Router,\r\n  Link\r\n} from 'react-router-dom';\r\n\r\nimport Header from './header/header';\r\n\r\nimport Moduel from './content/moduel';\r\nfunction App() {\r\n  return (\r\n    // basename={process.env.PUBLIC_URL} : 기본적인 경로는 유지 됨\r\n    <Route className=\"container\" basename={process.env.PUBLIC_URL}>\r\n      <Header></Header>\r\n      <Moduel></Moduel>\r\n    </Route>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\n// import jQuery from 'jquery';\r\n// window.$ = window.jQuery = jQuery;\r\nReactDOM.render(<Router basename={process.env.PUBLIC_URL}>< App /></Router>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}