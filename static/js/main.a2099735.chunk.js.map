{"version":3,"sources":["header/header.js","fun.js","Page/write/editor.config.js","Page/write/profileWrite.js","Page/profile.js","Page/list/list.js","Page/blog.js","Page/schedule.js","content/moduel.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["Header","props","headerClick","e","console","log","this","setState","classNamePush","state","aa","className","exact","to","onClick","React","Component","a","careerFirstDate","careerFirstDateEnd","Date","careerFirstDateStart","careerSecDateEnd","careerSecDateStart","firstMonth","getTime","day","secondMonth","allCareer","Math","ceil","data","yearCareer","floor","dateYmdFilter","date","split","formats","modules","toolbar","size","clipboard","matchVisual","profileWrite","prop","proTyle","createRef","proTitle","proContent","submitProfile","current","value","summerChange","text","ref","id","el","EditorConfig","theme","defaultProps","proFile","getList","axios","get","COMMON","then","response","items","profile","isLoding","catch","menuClickOn","menu","menuToggle","menuOn","careerDate","Fun","carrer","map","index","mc_compony","mc_startdate","mc_enddate","mc_position","mc_project_name","project","value1","pro_title","pro_content","pro_start_date","pro_end_date","pro_skill_set","list","pro_type","dangerouslySetInnerHTML","__html","name","PropTypes","string","blog","schedule","getTitle","params","moduel","path","render","component","Profile","App","basename","process","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"oNA4DeA,G,wDAtDX,WAAYC,GAAO,IAAD,8BACd,cAAMA,IAmBVC,YAAc,SAASC,GACnBC,QAAQC,IAAIF,GACZG,KAAKC,SAAS,CAACC,cAAgBL,KAnB/B,EAAKM,MAAQ,CACTC,GAAK,EACLF,cAAgB,MALN,E,qDAyBT,IAAD,OACJ,OACI,6BACI,wBAAIG,UAAU,aACV,wBAAIA,UAAuC,QAA5BL,KAAKG,MAAMD,cAA0B,KAAO,IAKvD,kBAAC,IAAD,CAAMI,OAAK,EAACC,GAAG,SAASC,QAAS,SAACX,GAAO,EAAKD,YAAa,UAA3D,SAEJ,wBAAIS,UAAuC,SAA5BL,KAAKG,MAAMD,cAA2B,KAAO,IAIxD,kBAAC,IAAD,CAAMI,OAAK,EAACC,GAAG,SAASC,QAAS,SAACX,GAAO,EAAKD,YAAa,WAA3D,uBAEJ,wBAAIS,UAAuC,QAA5BL,KAAKG,MAAMD,cAA0B,KAAO,IACvD,kBAAC,IAAD,CAAMK,GAAG,QAAQC,QAAS,SAACX,GAAO,EAAKD,YAAa,UAApD,sBAEJ,wBAAIS,UAAuC,YAA5BL,KAAKG,MAAMD,cAA8B,KAAO,IAC3D,kBAAC,IAAD,CAAMK,GAAG,YAAYC,QAAS,SAACX,GAAO,EAAKD,YAAa,cAAxD,kB,GAhDHa,IAAMC,Y,kECFpB,SAASC,IACZ,IAAIC,EAAkB,CAAC,aAAc,cAGjCC,EAAqB,IAAIC,KAAKF,EAAgB,IAC9CG,EAAuB,IAAID,KAAKF,EAAgB,IAEhDI,EAAmB,IAAIF,KACvBG,EAAqB,IAAIH,KANR,cAYjBI,GAAcL,EAAmBM,UAAYJ,EAAqBI,WAF1DC,OAGRC,GAAeL,EAAiBG,UAAYF,EAAmBE,WAHvDC,OAMRE,EAAYC,KAAKC,KAAKN,EAAaG,GACnCI,EAAO,KAEX,GAAGH,EAAY,GAAG,CAEd,IAAII,EAAaH,KAAKI,MAAOL,EAAY,IACzCG,EAAOF,KAAKI,MAAML,EAAY,IAAK,SAAOA,GAAa,GAAKI,GAAc,oBAE1ED,EAAOH,EAAY,eAGvB,OAAOG,EAGJ,SAASG,EAAcC,GAc1B,OATW,MAARA,EAEW,MAEFA,EAAKC,MAAM,KAEH,G,qBC7CbC,G,OAAU,CACjB,SAAU,OAAQ,OAClB,OAAQ,SAAU,YAAa,SAAU,aACzC,OAAQ,SAAU,SAClB,OAAQ,QAAS,QAAS,UAGjBC,EAAU,CACnBC,QAAS,CACL,CAAC,CAAE,OAAU,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAG,KAChC,CAAC,CAACC,KAAM,KACR,CAAC,OAAQ,SAAU,YAAa,SAAU,aAAc,SACxD,CAAC,CAAE,KAAQ,WAAa,CAAE,KAAQ,UAAY,CAAE,MAAS,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,iBAAmB,CAAE,WAAc,IAAM,OAAQ,SAC5e,CAAC,OAAQ,QAAS,SAClB,CAAC,UAEHC,UAAW,CAETC,aAAa,ICKRC,G,OAAb,kDAEI,WAAYC,GAAM,IAAD,8BACb,cAAMA,IAWVC,QAAU9B,IAAM+B,YAZC,EAajBC,SAAWhC,IAAM+B,YAbA,EAcjBE,WAAajC,IAAM+B,YAdF,EAgBjBG,cAAgB,WACZ7C,QAAQC,IAAIC,KAAKuC,QAAQK,QAAQC,OACjC/C,QAAQC,IAAIC,KAAKyC,UAGjB3C,QAAQC,IAAIC,KAAKyC,SAAStC,MAAM0C,QArBnB,EAgCjBC,aAAe,SAACC,GACZjD,QAAQC,IAAIgD,IAjCC,EAFrB,gEA2CQjD,QAAQC,IAAI,uBA3CpB,+BA+Cc,IAAD,OACL,OACI,6BAOI,6BACI,4BAAQiD,IAAKhD,KAAKuC,SACd,4BAAQM,MAAM,aAAd,kCACA,4BAAQA,MAAM,WAAd,kCACA,4BAAQA,MAAM,YAAd,mCACA,4BAAQA,MAAM,UAAd,mCAEJ,6BACA,2BAAOI,GAAG,MAAMD,IAAKhD,KAAKyC,WAC1B,kBAAC,IAAD,CACIO,IAAK,SAACE,GAAD,OAAQ,EAAKT,SAAWS,GAC7BnB,QAASoB,EACTnB,QAASmB,EACTC,MAAM,SAEV,4BAAQ5C,QAAS,WACb,EAAKmC,kBADT,sBAvEpB,GAAkCjC,cAgFlC2B,EAAagB,aAAe,GAGbhB,QChGMiB,GCRa5C,Y,kDDW9B,WAAYf,GAAO,IAAD,8BACd,cAAMA,IAUV4D,QAXkB,sBAWR,sBAAA5C,EAAA,sEACA6C,IAAMC,IAAIC,kDAAgC,IAAIC,MAAK,SAACC,GACtD,IAAIC,EAAQD,EAASnC,KACrB,EAAKxB,SAAS,CACV6D,QAAUD,EAAMpC,KAChBsC,UAAW,IAGfjE,QAAQC,IAAI,EAAKI,MAAM2D,YACxBE,OAAM,SAAAJ,GACL,EAAK3D,SAAS,CACV6D,QAAU,GACVC,UAAW,OAZb,2CAXQ,EAwClBE,YAAc,SAASC,GACnB,IAAIC,EAAa,KAGN,QAARD,EACCC,EAAoC,SAAtBnE,KAAKG,MAAMiE,OAAqB,GAAK,OACrC,YAATF,EACLC,EAAoC,YAAtBnE,KAAKG,MAAMiE,OAAwB,GAAK,UACxC,aAATF,IACLC,EAAoC,aAAtBnE,KAAKG,MAAMiE,OAAyB,GAAK,YAE3DpE,KAAKC,SAAS,CAACmE,OAASD,KAjDxB,EAAKhE,MAAQ,CACTiE,OAAU,OACVN,QAAU,GACVO,WAAaC,IACbP,UAAW,GAND,E,iLA8BdjE,QAAQC,IAAIC,KAAKG,MAAMiE,QAEvBtE,QAAQC,IAAIC,KAAKG,O,SACXH,KAAKuD,U,OAEXzD,QAAQC,IAAIC,KAAKG,O,qIAkBZ,IAAD,SACyBH,KAAKG,MAA3B2D,EADH,EACGA,QAASC,EADZ,EACYA,SAGhB,OADAjE,QAAQC,IAAI+D,GAER,yBAAKzD,UAAU,gBACX,yBAAKA,UAAU,uBACX,gIACA,sDAAaL,KAAKG,MAAMkE,aAE5B,wBAAIhE,UAAU,gBACV,wBAAIG,QAAU,WAAQ,EAAKyD,YAAY,SACnC5D,UAAkC,SAAtBL,KAAKG,MAAMiE,OAAoB,KAAO,IADtD,kCAKA,wBAAI5D,QAAU,WAAQ,EAAKyD,YAAY,YACnC5D,UAAkC,YAAtBL,KAAKG,MAAMiE,OAAuB,KAAO,IADzD,wCAKA,wBAAI5D,QAAU,WAAQ,EAAKyD,YAAY,aACnC5D,UAAkC,aAAtBL,KAAKG,MAAMiE,OAAwB,KAAO,IAD1D,6BAMJ,4BAEIL,EAAWD,EAAQS,OAAOC,KAAI,SAAC3B,EAAO4B,GAClC,OACI,4BACI,6BACI,8BAAO5B,EAAM6B,aAEjB,6BACI,8BAAOJ,EAAkBzB,EAAM8B,eADnC,KAEI,8BAAOL,EAAkBzB,EAAM+B,cAEnC,6BACI,8BAAO/B,EAAMgC,cAEjB,6BACI,8BAAOhC,EAAMiC,kBAOjBjC,EAAMkC,QAAQP,KAAI,SAACQ,EAAQP,GACvB,OACI,4BACI,0BAAMpE,UAAU,gBAAgBoE,EAAQ,EAAGO,EAAOC,WAClD,4BAAKD,EAAOE,aACZ,4BAAKZ,EAAkBU,EAAOG,iBAC9B,4BAAKb,EAAkBU,EAAOI,eAC9B,4BAAKJ,EAAOK,uBAQ/B,uCAIT,4BAEQtB,EAAWD,EAAQwB,KAAKd,KAAI,SAAC3B,EAAO4B,GAEhC,GAAqB,WAAlB5B,EAAM0C,SACL,OACI,6BACI,8BAAO1C,EAAMoC,WACb,yBAAKO,wBAAyB,CAACC,OAAS5C,EAAMqC,mBAIzD,uCAGb,yBAAK7E,UAAW,qBAA6C,SAAtBL,KAAKG,MAAMiE,OAAoB,KAAO,KACzE,4BACI,mDACA,4BACI,2CAAM,2CAAN,oEACA,4FACmB,6BADnB,oEAEmB,6BAFnB,iDAGe,6BAHf,8FAIyB,+BAG7B,4BACI,2CAAM,2CAAN,8DACA,4FACmB,6BADnB,oEAEmB,6BAFnB,iDAGe,6BAHf,8FAIyB,iCAKrC,yBAAK/D,UAAW,qBAA6C,YAAtBL,KAAKG,MAAMiE,OAAuB,KAAO,KAC5E,4BACI,qEACA,4BACI,6BACI,wIAKJ,6BACI,gDAEJ,6BACI,8BACI,4BACI,uCACA,2CACA,0CACA,mCACA,4CACA,iDACA,qCAGR,sEAGR,4BACI,6BACI,4HAEJ,6BACI,oDAEJ,6BACI,8BACI,4BACI,uCACA,2CACA,0CACA,mCACA,4CACA,mCACA,qCAGR,sEAGR,4BACI,0EACA,6BACI,8DACA,sEAGR,4BACI,0EACA,6BACI,8DACA,sEAGR,4BACI,0EACA,6BACI,8DACA,sEAGR,4BACI,0EACA,6BACI,8DACA,sEAGR,4BACI,0EACA,6BACI,8DACA,wEAKhB,yBAAK/D,UAAW,qBAA6C,aAAtBL,KAAKG,MAAMiE,OAAwB,KAAO,KAC7E,4BACI,4CACA,2DAEI,0DASX,6BACI,kBAAC,EAAD,Y,GAzQgB3D,IAAMC,YAkR3C4C,EAAQD,aAAe,CACnBqC,KAAMC,IAAUC,Q,IEvPLC,E,kDAhCX,WAAYlG,GAAO,uCACTA,G,qDAGN,OACI,6BACI,yBAAKU,UAAU,aACX,4BACI,4BAAKL,KAAKL,MAAM+F,MAChB,qCACA,uCACA,wCACA,uCACA,uCACA,yCAIR,yBAAKrF,UAAU,uB,GApBZK,aCANoF,EAAb,kDAEI,WAAYnG,GAAO,IAAD,8BAEd,cAAMA,IAEDQ,MAAQ,CACT4F,SAAW,QALD,EAFtB,iEAiByB,IAAD,OAChBvC,IAAMC,IAAI,wBAAyB,CAAEuC,OAAS,CAAC/C,GAAK,KAAKU,MAAK,SAACC,GAC3D9D,QAAQC,IAAI6D,EAASnC,MACrB,EAAKxB,SAAS,CACV8F,SAAUnC,EAASnC,YArBnC,+BA4BQ,OACI,6BACKzB,KAAKG,MAAM4F,SACX/F,KAAKI,QA/BtB,GAA8BM,aAqC9BoF,EAASzC,aAAe,CACpBqC,KAAMC,IAAUC,QAELE,QCbAG,E,kDA1BX,WAAYtG,GAAO,IAAD,8BACd,cAAMA,IAEDQ,MAAQ,GAHC,E,qDAQd,OACI,6BAMI,kBAAC,IAAD,CAAO+F,KAAK,SAASC,OAAQ,kBACzB,8CAEJ,kBAAC,IAAD,CAAOD,KAAK,SAASE,UAAWC,IAChC,kBAAC,IAAD,CAAOH,KAAK,QAAQE,UAAY,kBAAM,kBAAC,EAAD,CAAMV,KAAK,YACjD,kBAAC,IAAD,CAAOQ,KAAK,YAAYE,UAAY,kBAAM,kBAAC,EAAD,CAAUV,KAAK,qB,GAtBpDjF,IAAMC,WCoBZ4F,MAVf,WACE,OAEE,kBAAC,IAAD,CAAOjG,UAAU,YAAYkG,SAAUC,SACrC,kBAAC,EAAD,MACA,kBAAC,EAAD,QCNcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,IAASX,OAAO,kBAAC,IAAD,CAAQI,SAAUC,SAAwB,kBAAE,EAAF,OAAmBO,SAASC,eAAe,SD2H/F,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBxD,MAAK,SAAAyD,GACJA,EAAaC,gBAEdrD,OAAM,SAAAsD,GACLxH,QAAQwH,MAAMA,EAAMC,a,6EEzI5BC,EAAOC,QAAU,IAA0B,kC","file":"static/js/main.a2099735.chunk.js","sourcesContent":["import React from 'react';\nimport { Router, Link} from 'react-router-dom';\nimport '../css/common.css';\n\nclass Header extends React.Component{\n\n    constructor(props){\n        super(props)\n\n        this.state = {\n            aa : 1,\n            classNamePush : null,\n            // firebaseConfig = {\n            //     apiKey: \"AIzaSyAzdEI_b6zQ1DcmMsXj1qglZgtt3jEWlKk\",\n            //     authDomain: \"todolist-f3d53.firebaseapp.com\",\n            //     databaseURL: \"https://todolist-f3d53.firebaseio.com\",\n            //     projectId: \"todolist-f3d53\",\n            //     storageBucket: \"todolist-f3d53.appspot.com\",\n            //     messagingSenderId: \"963413121103\",\n            //     appId: \"1:963413121103:web:54c9fe1ed174adb119f23a\",\n            //     measurementId: \"G-00L2B594G4\"\n            //   },\n        \n        }\n    }\n\n    headerClick = function(e) {\n        console.log(e);\n        this.setState({classNamePush : e});\n    }\n\n    render(){\n        return(\n            <div>\n                <ul className=\"header-ui\">\n                    <li className={this.state.classNamePush == 'zzzz' ? 'on' : ''}>\n                        {/** \n                         * exact를 사용하면 /일떄만 나오고 나머지는 안나온다. \n                         * 비슷한 url에 정확하게를 원한다면 exact를 사용한다.\n                         */}\n                        <Link exact to=\"/zzzz1\" onClick={(e) => {this.headerClick ('zzzz')}}>zzzz</Link>\n                    </li>\n                    <li className={this.state.classNamePush == 'about' ? 'on' : ''}>\n                        {/**\n                         * Link는 URL를 넣을 때 사용한다.\n                         */}\n                        <Link exact to=\"/about\" onClick={(e) => {this.headerClick ('about')}}>이력서</Link>\n                    </li>\n                    <li className={this.state.classNamePush == 'blog' ? 'on' : ''}>\n                        <Link to=\"/blog\" onClick={(e) => {this.headerClick ('blog')}}>Blog 정보</Link>\n                    </li>\n                    <li className={this.state.classNamePush == 'schedule' ? 'on' : ''}>\n                        <Link to=\"/schedule\" onClick={(e) => {this.headerClick ('schedule')}}>scedlue</Link>\n                    </li>\n                </ul>\n            </div>\n        )\n    }\n}\n\nexport default Header;","// export를 해서 내보내줘야한다\n// 받을땐 import\nexport function a(){\n    let careerFirstDate = ['2019-01-01', '2019-05-31'];\n    let careerSecDate = ['2019-07-17'];\n    \n    let careerFirstDateEnd = new Date(careerFirstDate[1]);\n    let careerFirstDateStart = new Date(careerFirstDate[0]);\n\n    let careerSecDateEnd = new Date();\n    let careerSecDateStart = new Date(careerSecDate[0]);\n    // mssecond를 하루로 만드는 공식\n    let day = 24 * 60 * 60 * 1000;\n    // mssecond를 한달로 만드는 공식\n    let month = day * 30;\n\n    let firstMonth = (careerFirstDateEnd.getTime() - careerFirstDateStart.getTime()) / month;\n    let secondMonth = (careerSecDateEnd.getTime() - careerSecDateStart.getTime()) / month;\n\n\n    let allCareer = Math.ceil(firstMonth + secondMonth);\n    let data = null;\n\n    if(allCareer > 13){\n\n        var yearCareer = Math.floor((allCareer / 12));\n        data = Math.floor(allCareer / 12) +'년' + (allCareer % (12 * yearCareer)) +'개월';\n    }else{\n        data = allCareer + '개월';\n    }\n\n    return data;\n}\n\nexport function dateYmdFilter(date){\n\n    let dateYmd = null;\n    let dateA = null;\n\n    if(date == null){\n\n        dateYmd = 'Now';\n    }else{\n        dateA = date.split('T');\n\n        dateYmd = dateA[0];\n    }\n\n    return dateYmd;\n}\n","export var formats = [\n    'header', 'font', 'size',\n    'bold', 'italic', 'underline', 'strike', 'blockquote',\n    'list', 'bullet', 'indent',\n    'link', 'image', 'video', 'color'\n  ]\n\n  export var modules = {\n    toolbar: [\n        [{ 'header': [1, 2, 3, 4, 5, 6, false]}],\n        [{size: []}],\n        ['bold', 'italic', 'underline', 'strike', 'blockquote', 'color'],\n        [{ 'list': 'ordered' }, { 'list': 'bullet' }, { 'color': ['#000000', '#e60000', '#ff9900', '#ffff00', '#008a00', '#0066cc', '#9933ff', '#ffffff', '#facccc', '#ffebcc', '#ffffcc', '#cce8cc', '#cce0f5', '#ebd6ff', '#bbbbbb', '#f06666', '#ffc266', '#ffff66', '#66b966', '#66a3e0', '#c285ff', '#888888', '#a10000', '#b26b00', '#b2b200', '#006100', '#0047b2', '#6b24b2', '#444444', '#5c0000', '#663d00', '#666600', '#003700', '#002966', '#3d1466', 'custom-color'] }, { 'background': [] }, 'link', 'emoji'],\n        ['link', 'image', 'video'],\n        ['clean']\n      ],\n      clipboard: {\n        // toggle to add extra line breaks when pasting HTML:\n        matchVisual: false,\n      }\n}\n\n// imageUpload: {\n//     url: \"<내 image upload API 주소>\", // server url\n//     method: \"POST\", // change query method, default 'POST'\n//           name : 'images' // 아래 설정으로 image upload form의 key 값을 변경할 수 있다.\n//     headers: {\n//       Authorization: `Bearer ${<내 토큰 값>}`, \n//       'X-Total-Count': 0,\n//     },\n//     callbackOK: (serverResponse, next) => { // 성공하면 리턴되는 함수\n//         next(serverResponse);\n//     },\n//     callbackKO: (serverError) => { // 실패하면 리턴되는 함수\n//       console.log(serverError);\n//         // alert(serverError);\n//     },\n//     // optional\n//     // add callback when a image have been chosen\n//     checkBeforeSend: (file, next) => {\n//         console.log(file);\n//         next(file); // go back to component and send to the server\n//     }\n//   },\n//   clipboard: {\n//     // toggle to add extra line breaks when pasting HTML:\n//     matchVisual: false,\n//   },\n//   // imageDrop: true, // imageDrop 등록\n//   // imageResize: {} // imageResize 등록","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport axios from 'axios';\n\nimport ReactQuill from 'react-quill'; // ES6\nimport 'react-quill/dist/quill.snow.css'; // ES6\nimport * as EditorConfig from './editor.config';\nimport $ from 'jquery';\n\n\n// css imports\nimport '../../index.css';\n\n// imports for summernote\n// import 'react-summernote/dist/react-summernote.css'; // import styles\n// import 'react-summernote/lang/summernote-ru-RU'; // you can import any other locale\n\n// import 'react-summernote/dist/react-summernote.css'; // import styles\n// import 'react-summernote/lang/summernote-ru-RU'; // you can import any other locale\n\n// Import bootstrap(v3 or v4) dependencies\n\n\nexport class profileWrite extends Component {\n\n    constructor(prop){\n        super(prop);\n\n    }\n\n    \n    /**\n     * ref 생성 = React.createRef\n     * ref의 value 값을 가져오기 위해선 current.value\n     * ref의 상태 및 이벤트 추가는 current\n     * 받아올땐 this.변수로 받아준다\n     */\n    proTyle = React.createRef();\n    proTitle = React.createRef();\n    proContent = React.createRef();\n\n    submitProfile = function(){\n        console.log(this.proTyle.current.value);\n        console.log(this.proTitle);\n        // ReactQuill = 해당 editor에 대한 값\n        // https://github.com/zenoamaro/react-quill\n        console.log(this.proTitle.state.value);\n        // var postData = {\n        //     'pro_type' : this.proTyle.current.value,\n        //     'pro_title' : this.proTitle.current.value\n        // }\n\n        // axios.post('http://localhost:8004/profile', postData).then(response => {\n\n        // });\n    }\n\n    summerChange = (text) =>{\n        console.log(text);\n    }\n\n    /**\n     * componentWillMount : render 전에 실행이 된다 그래서 에러가 해당하는 id나 class로 사용하는 event를 사용하면 에러가 발생\n     * componentDidMount : render 이후 발생하는 id와 class를 이용한 event를 사용하기 좋다.\n     */\n    componentDidMount(){\n        console.log(\"componentDidMount\");\n    }\n    \n    \n    render() {\n        return (\n            <div>\n                {/**\n                 * 글쓰기 전용\n                 * profile type : 포토폴리오, 자기소개서, 희망 팀, 경력증명서\n                 * profile Title : 포토폴리오의 제목\n                 * profile Content : 포토폴리오 내용\n                 */}\n                <div>\n                    <select ref={this.proTyle}>\n                        <option value=\"portFolio\">포트폴리오</option>\n                        <option value=\"aboutMe\">자기소개서</option>\n                        <option value=\"hopeTeam\">희망하는 팀</option>\n                        <option value=\"career\">경력증명서</option>\n                    </select>\n                    <br></br>\n                    <input id=\"aaa\" ref={this.proTitle}></input>\n                    <ReactQuill\n                        ref={(el) => this.proTitle = el}\n                        formats={EditorConfig.formats}\n                        modules={EditorConfig.modules}\n                        theme=\"snow\" \n                    />\n                    <button onClick={() => {\n                        this.submitProfile();\n                    }}>전송</button>\n                </div>\n            </div>\n        )\n    }\n}\n\nprofileWrite.defaultProps = {\n    \n}\nexport default profileWrite\n","import React from 'react';\nimport PropTypes, { array } from 'prop-types';\nimport axios from 'axios';\n// 외부에 있는 React를 불러오기 위해서 사용을 한다.\n// 단 별칭을 지어주는게 좋다.\nimport * as Fun from '../fun';\nimport ProfileWrite from './write/profileWrite';\nimport * as COMMON from '../common';\nimport List from './list/list';\n\nexport default class proFile extends React.Component {\n\n    // 제일 먼저 시작될 함수\n    constructor(props){\n        super(props);\n        this.state = {\n            menuOn :  'info',\n            profile : [],\n            careerDate : Fun.a(),\n            isLoding : false,\n        }\n        \n    }\n\n    getList = async () => {\n        await axios.get(COMMON.API_SERVER + '/profile', {}).then((response) => {\n            var items = response.data;\n            this.setState({\n                profile : items.data,\n                isLoding : true\n            })\n\n            console.log(this.state.profile);\n        }).catch(response => {\n            this.setState({\n                profile : [],\n                isLoding : false\n            })\n        });\n    }\n\n    // component가 시작되기 전에 사용할 함수\n    async componentDidMount () {\n        console.log(this.state.menuOn);\n\n        console.log(this.state);  \n        await this.getList();\n\n        console.log(this.state);       \n    }\n\n\n\n    menuClickOn = function(menu){\n        let menuToggle = null;\n\n        // state 값을 받아와서 toggle 형태로 받아준다.\n        if(menu == 'info'){\n            menuToggle = (this.state.menuOn === 'info') ? '' : 'info';\n        }else if(menu === 'project'){\n            menuToggle = (this.state.menuOn === 'project') ? '' : 'project';\n        }else if(menu === 'announce'){\n            menuToggle = (this.state.menuOn === 'announce') ? '' : 'announce';\n        }\n        this.setState({menuOn : menuToggle});\n    }\n    render(){\n        const {profile, isLoding } = this.state;\n\n        console.log(profile);\n        return(\n            <div className=\"profile-info\">\n                <div className=\"profile-about-title\">\n                    <span>항상 노력하는 지원자 신진섭입니다.</span>\n                    <span>총경력 : {this.state.careerDate}</span>\n                </div>\n                <ul className=\"profile-menu\">\n                    <li onClick={ () => { this.menuClickOn('info')}}\n                        className={(this.state.menuOn === 'info' ? 'on' : '')}\n                    >\n                        자기소개서\n                    </li>\n                    <li onClick={ () => { this.menuClickOn('project')}}\n                        className={(this.state.menuOn === 'project' ? 'on' : '')}\n                    >\n                        프로젝트경험\n                    </li>\n                    <li onClick={ () => { this.menuClickOn('announce')}}\n                        className={(this.state.menuOn === 'announce' ? 'on' : '')}\n                    >\n                        발표내용\n                    </li>\n                </ul>\n                <ul>\n                {\n                    isLoding ? profile.carrer.map((value, index) =>{\n                        return (\n                            <li>\n                                <div>\n                                    <span>{value.mc_compony}</span>\n                                </div>\n                                <div>\n                                    <span>{Fun.dateYmdFilter(value.mc_startdate)}</span> ~ \n                                    <span>{Fun.dateYmdFilter(value.mc_enddate)}</span>\n                                </div>\n                                <div>\n                                    <span>{value.mc_position}</span>\n                                </div>\n                                <div>\n                                    <span>{value.mc_project_name}</span>\n                                </div>\n                                \n                    \n                            {\n                                // map {} => 안에는 return () 이 필수로 들어가야한다. \n                                // react에서는 {} 안에는 습관처럼 return을 적자\n                                value.project.map((value1, index) => {\n                                    return (\n                                        <ul>\n                                            <span className=\"projectTitle\">{index + 1}{value1.pro_title}</span>\n                                            <li>{value1.pro_content}</li>\n                                            <li>{Fun.dateYmdFilter(value1.pro_start_date)}</li>\n                                            <li>{Fun.dateYmdFilter(value1.pro_end_date)}</li>\n                                            <li>{value1.pro_skill_set}</li>\n                                        </ul>\n                                    )\n                                })\n                            }\n                        \n                            </li>\n                        )\n                    }) : <li>Loding</li>\n                }\n                </ul>\n\n                <ul>\n                    {\n                        isLoding ? profile.list.map((value, index) => {\n\n                            if(value.pro_type == 'profile'){\n                                return(\n                                    <div>\n                                        <span>{value.pro_title}</span>\n                                        <div dangerouslySetInnerHTML={{__html : value.pro_content}}></div>\n                                    </div>\n                                )\n                            }\n                        }) : <li>Loding</li>\n                    }\n                </ul>\n                <div className={\"profile-about-me \" + (this.state.menuOn === 'info' ? 'on' : '')}>\n                    <dl>\n                        <dt>신진섭 </dt>\n                        <dd>\n                            <p>저는 <code>_ _ _ _ _</code> 개발자가 되고 싶습니다.</p>\n                            <div>\n                                1. 테스트 코드를 짤 짜는<br></br>\n                                2. 완성보다 버그를 줄이는<br></br>\n                                3. 책임감을 가지는<br></br>\n                                4. 남들보다 혹시 남과 같이 노력하는<br></br>\n                            </div> \n                        </dd>\n                        <dd>\n                            <p>저는 <code>_ _ _ _ _</code> 팀원이 되고 싶습니다.</p>\n                            <div>\n                                1. 테스트 코드를 짤 짜는<br></br>\n                                2. 완성보다 버그를 줄이는<br></br>\n                                3. 책임감을 가지는<br></br>\n                                4. 남들보다 혹시 남과 같이 노력하는<br></br>\n                            </div> \n                        </dd>\n                    </dl>\n                </div>\n                <div className={\"profile-about-me \" + (this.state.menuOn === 'project' ? 'on' : '')}>\n                    <dl>\n                        <dt>프로젝트 경험</dt>\n                        <dd>\n                            <div>\n                                <span>\n                                    7. 에듀서브 수업 마이그레이션\n                                    & React Native Web View\n                                </span>\n                            </div>\n                            <div>\n                                <span>2020.06 ~ ing</span>\n                            </div>\n                            <div>\n                                <span>\n                                    <dl>\n                                        <dt>php 7.2</dt>\n                                        <dt>angular 1.5</dt>\n                                        <dt>javascript</dt>\n                                        <dt>aws</dt>\n                                        <dt>mariaDB 10.5</dt>\n                                        <dt>React Native 0.61</dt>\n                                        <dt>Npm</dt>\n                                    </dl>\n                                </span>\n                                <p>프로젝트 내용</p>\n                            </div>\n                        </dd>\n                        <dd>\n                            <div>\n                                <span>6. 에듀서브 커뮤니티 마이그레이션</span>\n                            </div>\n                            <div>\n                                <span>2020.01 ~ 2020.03</span>\n                            </div>\n                            <div>\n                                <span>\n                                    <dl>\n                                        <dt>php 7.2</dt>\n                                        <dt>angular 1.5</dt>\n                                        <dt>javascript</dt>\n                                        <dt>aws</dt>\n                                        <dt>mariaDB 10.5</dt>\n                                        <dt>git</dt>\n                                        <dt>C.I</dt>\n                                    </dl>\n                                </span>\n                                <p>프로젝트 내용</p>\n                            </div>\n                        </dd>\n                        <dd>\n                            <span>5. 프로젝트 경험</span>\n                            <div>\n                                <p>사용한 기술</p>\n                                <p>프로젝트 내용</p>\n                            </div>\n                        </dd>\n                        <dd>\n                            <span>4. 프로젝트 경험</span>\n                            <div>\n                                <p>사용한 기술</p>\n                                <p>프로젝트 내용</p>\n                            </div>\n                        </dd>\n                        <dd>\n                            <span>3. 프로젝트 경험</span>\n                            <div>\n                                <p>사용한 기술</p>\n                                <p>프로젝트 내용</p>\n                            </div>\n                        </dd>\n                        <dd>\n                            <span>2. 프로젝트 경험</span>\n                            <div>\n                                <p>사용한 기술</p>\n                                <p>프로젝트 내용</p>\n                            </div>\n                        </dd>\n                        <dd>\n                            <span>1. 프로젝트 경험</span>\n                            <div>\n                                <p>사용한 기술</p>\n                                <p>프로젝트 내용</p>\n                            </div>\n                        </dd>\n                    </dl>\n                </div>\n                <div className={\"profile-about-me \" + (this.state.menuOn === 'announce' ? 'on' : '')}>\n                    <dl>\n                        <dt>발표</dt>\n                        <dd>\n                            1. 발표 제목\n                            <span> 발표 ppt url</span>\n                        </dd>\n                    </dl>\n                </div>\n                {/**\n                 * 글쓰기 포맷\n                 * 글쓰기시 활성화 component\n                 * writer 클릭시 class 활성화 active\n                 */}\n                 <div>\n                     <ProfileWrite></ProfileWrite>\n                 </div>\n            </div>\n        )\n    }\n}\n\n// props의 타입을 지정해준다\n// 부모로 부터 받은 값을 이야기한다\nproFile.defaultProps = {\n    name: PropTypes.string,\n}\n","import React, { Component } from 'react'\n\nexport default class list extends Component {\n\n    constructor(props){\n        super(props);\n\n        console.log(props);\n    }\n    render() {\n        return (\n            <div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\n\nclass blog extends Component {\n\n    constructor(props){\n        super(props);\n    }\n    render() {\n        return (\n            <div>\n                <div className=\"blog-info\">\n                    <dl>\n                        <dd>{this.props.name}</dd>\n                        <dd>React</dd>\n                        <dd>Express</dd>\n                        <dd>FireBase</dd>\n                        <dd>MariaDB</dd>\n                        <dd>AWS RDS</dd>\n                        <dd>Git Hub</dd>\n                    </dl>\n                </div>\n\n                <div className=\"blog-connenct\">\n\n                </div>\n            </div>\n        );\n    }\n}\n\n\nblog.propTypes = {\n    name:PropTypes.string = 'kk'\n};\n\n\nexport default blog;\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport axios from 'axios';\n\nexport class schedule extends Component {\n\n    constructor(props){\n\n        super(props);\n\n        this.state = {\n            getTitle : 'zzzz'\n        };\n    }\n\n    /**\n     * React Component가 실행할 때 제일 먼저 실행될 함수\n     * 주로 비동기 통신 할 때 사용한다.\n     * arrow function 일 경우 setStete가 먹힌다.\n     * 원인은 파악 중\n     */\n    componentWillMount(){\n        axios.get('https://api.ip.pe.kr/', { params : {id : 1}}).then((response) => {\n            console.log(response.data);\n            this.setState({ \n                getTitle: response.data\n              });\n            // this.setState({getTitle : response.data});\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                {this.state.getTitle}\n                {this.aa}\n            </div>\n        )\n    }\n}\n\nschedule.defaultProps = {\n    name: PropTypes.string,\n}\nexport default schedule\n","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport { Profile, Blog, Schedule } from './index';\nclass moduel extends React.Component {\n\n    constructor(props){\n        super(props);\n        \n        this.state = {\n\n        }\n    }\n    render(){\n        return(\n            <div>\n                {/**\n                 * 해당 url에 대한 컴포넌트를 지정할 때 사용을 한다.\n                 * render function () { return <>} 이렇게 쓰는 방법\n                 * component = {component }를 사용하는 방법이다\n                 */}\n                <Route path=\"/zzzz1\" render={() => (\n                    <h3>Render Test</h3>\n                )}></Route>\n                <Route path=\"/about\" component={Profile}></Route>\n                <Route path=\"/blog\" component={ () => <Blog name=\"name\"></Blog>}></Route>\n                <Route path=\"/schedule\" component={ () => <Schedule name=\"schedule\"></Schedule>}></Route>\n            </div>\n        )\n    }\n}\n\nexport default moduel;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport {\n  BrowserRouter as Route,\n  Router,\n  Link\n} from 'react-router-dom';\n\nimport Header from './header/header';\n\nimport Moduel from './content/moduel';\nfunction App() {\n  return (\n    // basename={process.env.PUBLIC_URL} : 기본적인 경로는 유지 됨\n    <Route className=\"container\" basename={process.env.PUBLIC_URL}>\n      <Header></Header>\n      <Moduel></Moduel>\n    </Route>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\n\nReactDOM.render(<Router basename={process.env.PUBLIC_URL}>< App /></Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}