{"version":3,"sources":["logo.svg","header/header.js","fun.js","Page/write/profileWrite.js","common.js","Page/list/list.js","Page/profile.js","Page/blog.js","Page/schedule.js","content/moduel.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","props","headerClick","e","console","log","this","setState","classNamePush","state","aa","className","exact","to","onClick","React","Component","a","careerFirstDate","careerFirstDateEnd","Date","careerFirstDateStart","careerSecDateEnd","careerSecDateStart","firstMonth","getTime","day","secondMonth","Math","ceil","profileWrite","prop","proTyle","createRef","proTitle","proContent","submitProfile","alert","current","value","postData","axios","post","then","response","ref","defaultProps","API_SERVER","window","location","host","indexOf","list","proFile","getList","get","COMMON","items","data","profile","isLoding","catch","menuClickOn","menu","menuToggle","menuOn","careerDate","Fun","caeer","map","index","mc_compony","name","PropTypes","string","blog","schedule","getTitle","params","id","moduel","path","render","component","Profile","App","Boolean","hostname","match","ReactDOM","basename","process","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.0f8a77a8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport { Router, Link} from 'react-router-dom';\nimport '../css/common.css';\n\nclass Header extends React.Component{\n\n    constructor(props){\n        super(props)\n\n        this.state = {\n            aa : 1,\n            classNamePush : null,\n            // firebaseConfig = {\n            //     apiKey: \"AIzaSyAzdEI_b6zQ1DcmMsXj1qglZgtt3jEWlKk\",\n            //     authDomain: \"todolist-f3d53.firebaseapp.com\",\n            //     databaseURL: \"https://todolist-f3d53.firebaseio.com\",\n            //     projectId: \"todolist-f3d53\",\n            //     storageBucket: \"todolist-f3d53.appspot.com\",\n            //     messagingSenderId: \"963413121103\",\n            //     appId: \"1:963413121103:web:54c9fe1ed174adb119f23a\",\n            //     measurementId: \"G-00L2B594G4\"\n            //   },\n        \n        }\n    }\n\n    headerClick = function(e) {\n        console.log(e);\n        this.setState({classNamePush : e});\n    }\n\n    render(){\n        return(\n            <div>\n                <ul className=\"header-ui\">\n                    <li className={this.state.classNamePush == 'zzzz' ? 'on' : ''}>\n                        {/** \n                         * exact를 사용하면 /일떄만 나오고 나머지는 안나온다. \n                         * 비슷한 url에 정확하게를 원한다면 exact를 사용한다.\n                         */}\n                        <Link exact to=\"/zzzz1\" onClick={(e) => {this.headerClick ('zzzz')}}>zzzz</Link>\n                    </li>\n                    <li className={this.state.classNamePush == 'about' ? 'on' : ''}>\n                        {/**\n                         * Link는 URL를 넣을 때 사용한다.\n                         */}\n                        <Link exact to=\"/about\" onClick={(e) => {this.headerClick ('about')}}>이력서</Link>\n                    </li>\n                    <li className={this.state.classNamePush == 'blog' ? 'on' : ''}>\n                        <Link to=\"/blog\" onClick={(e) => {this.headerClick ('blog')}}>Blog 정보</Link>\n                    </li>\n                    <li className={this.state.classNamePush == 'schedule' ? 'on' : ''}>\n                        <Link to=\"/schedule\" onClick={(e) => {this.headerClick ('schedule')}}>scedlue</Link>\n                    </li>\n                </ul>\n            </div>\n        )\n    }\n}\n\nexport default Header;","// export를 해서 내보내줘야한다\n// 받을땐 import\nexport function a(){\n    let careerFirstDate = ['2019-01-01', '2019-05-31'];\n    let careerSecDate = ['2019-07-17'];\n    \n    let careerFirstDateEnd = new Date(careerFirstDate[1]);\n    let careerFirstDateStart = new Date(careerFirstDate[0]);\n\n    let careerSecDateEnd = new Date();\n    let careerSecDateStart = new Date(careerSecDate[0]);\n    // mssecond를 하루로 만드는 공식\n    let day = 24 * 60 * 60 * 1000;\n    // mssecond를 한달로 만드는 공식\n    let month = day * 30;\n\n    let firstMonth = (careerFirstDateEnd.getTime() - careerFirstDateStart.getTime()) / month;\n    let secondMonth = (careerSecDateEnd.getTime() - careerSecDateStart.getTime()) / month;\n\n    return Math.ceil(firstMonth + secondMonth);\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport ReactSummernote from 'react-summernote';\nimport axios from 'axios';\n\nexport class profileWrite extends Component {\n\n    constructor(prop){\n        super(prop);\n    }\n\n    /**\n     * ref 생성 = React.createRef\n     * ref의 value 값을 가져오기 위해선 current.value\n     * ref의 상태 및 이벤트 추가는 current\n     * 받아올땐 this.변수로 받아준다\n     */\n    proTyle = React.createRef();\n    proTitle = React.createRef();\n    proContent = React.createRef();\n\n    submitProfile = function(){\n        alert(this.proTyle.current.value);\n        alert(this.proTitle.current.value);\n\n        var postData = {\n            'pro_type' : this.proTyle.current.value,\n            'pro_title' : this.proTitle.current.value\n        }\n\n        axios.post('http://localhost:8004/profile', postData).then(response => {\n\n        });\n    }\n    render() {\n        return (\n            <div>\n                {/**\n                 * 글쓰기 전용\n                 * profile type : 포토폴리오, 자기소개서, 희망 팀, 경력증명서\n                 * profile Title : 포토폴리오의 제목\n                 * profile Content : 포토폴리오 내용\n                 */}\n                <div>\n                    <select ref={this.proTyle}>\n                        <option value=\"portFolio\">포트폴리오</option>\n                        <option value=\"aboutMe\">자기소개서</option>\n                        <option value=\"hopeTeam\">희망하는 팀</option>\n                        <option value=\"career\">경력증명서</option>\n                    </select><br></br>\n\n                    <input ref={this.proTitle}></input>\n                    {/* <ReactSummernote\n                        value=\"Default value\"\n                        options={{\n                        lang: 'ru-RU',\n                        height: 350,\n                        dialogsInBody: true,\n                        toolbar: [\n                            ['style', ['style']],\n                            ['font', ['bold', 'underline', 'clear']],\n                            ['fontname', ['fontname']],\n                            ['para', ['ul', 'ol', 'paragraph']],\n                            ['table', ['table']],\n                            ['insert', [' link', 'picture', 'video']],\n                            ['view', ['fullscreen', 'codeview']]\n                        ]\n                        }}\n                        onChange={this.onChange}\n                    /> */}\n\n                    <button onClick={() => {\n                        this.submitProfile();\n                    }}>전송</button>\n                </div>\n            </div>\n        )\n    }\n}\n\nprofileWrite.defaultProps = {\n    \n}\nexport default profileWrite\n","export var API_SERVER = window.location.host.indexOf('localhost') >= 0 ? '//localhost:5000' : 'https://jinseop-todo-list.herokuapp.com';\n\n","import React, { Component } from 'react'\n\nexport default class list extends Component {\n\n    constructor(props){\n        super(props);\n\n        console.log(props);\n    }\n    render() {\n        return (\n            <div>\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport PropTypes, { array } from 'prop-types';\nimport axios from 'axios';\n// 외부에 있는 React를 불러오기 위해서 사용을 한다.\n// 단 별칭을 지어주는게 좋다.\nimport * as Fun from '../fun';\nimport ProfileWrite from './write/profileWrite';\nimport * as COMMON from '../common';\nimport List from './list/list';\n\nexport default class proFile extends React.Component {\n\n    // 제일 먼저 시작될 함수\n    constructor(props){\n        super(props);\n        this.state = {\n            menuOn :  'info',\n            profile : [],\n            careerDate : Fun.a(),\n            isLoding : false,\n        }\n        \n    }\n\n    getList = async () => {\n        await axios.get(COMMON.API_SERVER + '/profile', {}).then((response) => {\n            var items = response.data;\n            this.setState({\n                profile : items.data,\n                isLoding : true\n            })\n\n            console.log(this.state.profile);\n        }).catch(response => {\n            this.setState({\n                profile : [],\n                isLoding : false\n            })\n        });\n    }\n\n    // component가 시작되기 전에 사용할 함수\n    async componentDidMount () {\n        console.log(this.state.menuOn);\n\n        console.log(this.state);  \n        await this.getList();\n\n        console.log(this.state);       \n    }\n\n\n\n    menuClickOn = function(menu){\n        let menuToggle = null;\n\n        // state 값을 받아와서 toggle 형태로 받아준다.\n        if(menu == 'info'){\n            menuToggle = (this.state.menuOn === 'info') ? '' : 'info';\n        }else if(menu === 'project'){\n            menuToggle = (this.state.menuOn === 'project') ? '' : 'project';\n        }else if(menu === 'announce'){\n            menuToggle = (this.state.menuOn === 'announce') ? '' : 'announce';\n        }\n        this.setState({menuOn : menuToggle});\n    }\n    render(){\n        const {profile, isLoding } = this.state;\n\n        console.log(profile);\n        return(\n            <div className=\"profile-info\">\n                <div className=\"profile-about-title\">\n                    <span>항상 노력하는 지원자 신진섭입니다.</span>\n                    <span>총경력 : {this.state.careerDate}</span>\n                </div>\n                <ul className=\"profile-menu\">\n                    <li onClick={ () => { this.menuClickOn('info')}}\n                        className={(this.state.menuOn === 'info' ? 'on' : '')}\n                    >\n                        자기소개서\n                    </li>\n                    <li onClick={ () => { this.menuClickOn('project')}}\n                        className={(this.state.menuOn === 'project' ? 'on' : '')}\n                    >\n                        프로젝트경험\n                    </li>\n                    <li onClick={ () => { this.menuClickOn('announce')}}\n                        className={(this.state.menuOn === 'announce' ? 'on' : '')}\n                    >\n                        발표내용\n                    </li>\n                </ul>\n                <List list={profile}></List>\n                {\n                    isLoding ? profile.caeer.map((value, index) =>{\n                        return <li>{value.mc_compony}</li>\n                    }) : '2'\n                }\n                <div className={\"profile-about-me \" + (this.state.menuOn === 'info' ? 'on' : '')}>\n                    <dl>\n                        <dt>신진섭 </dt>\n                        <dd>\n                            <p>저는 <code>_ _ _ _ _</code> 개발자가 되고 싶습니다.</p>\n                            <div>\n                                1. 테스트 코드를 짤 짜는<br></br>\n                                2. 완성보다 버그를 줄이는<br></br>\n                                3. 책임감을 가지는<br></br>\n                                4. 남들보다 혹시 남과 같이 노력하는<br></br>\n                            </div> \n                        </dd>\n                        <dd>\n                            <p>저는 <code>_ _ _ _ _</code> 팀원이 되고 싶습니다.</p>\n                            <div>\n                                1. 테스트 코드를 짤 짜는<br></br>\n                                2. 완성보다 버그를 줄이는<br></br>\n                                3. 책임감을 가지는<br></br>\n                                4. 남들보다 혹시 남과 같이 노력하는<br></br>\n                            </div> \n                        </dd>\n                    </dl>\n                </div>\n                <div className={\"profile-about-me \" + (this.state.menuOn === 'project' ? 'on' : '')}>\n                    <dl>\n                        <dt>프로젝트 경험</dt>\n                        <dd>\n                            <div>\n                                <span>\n                                    7. 에듀서브 수업 마이그레이션\n                                    & React Native Web View\n                                </span>\n                            </div>\n                            <div>\n                                <span>2020.06 ~ ing</span>\n                            </div>\n                            <div>\n                                <span>\n                                    <dl>\n                                        <dt>php 7.2</dt>\n                                        <dt>angular 1.5</dt>\n                                        <dt>javascript</dt>\n                                        <dt>aws</dt>\n                                        <dt>mariaDB 10.5</dt>\n                                        <dt>React Native 0.61</dt>\n                                        <dt>Npm</dt>\n                                    </dl>\n                                </span>\n                                <p>프로젝트 내용</p>\n                            </div>\n                        </dd>\n                        <dd>\n                            <div>\n                                <span>6. 에듀서브 커뮤니티 마이그레이션</span>\n                            </div>\n                            <div>\n                                <span>2020.01 ~ 2020.03</span>\n                            </div>\n                            <div>\n                                <span>\n                                    <dl>\n                                        <dt>php 7.2</dt>\n                                        <dt>angular 1.5</dt>\n                                        <dt>javascript</dt>\n                                        <dt>aws</dt>\n                                        <dt>mariaDB 10.5</dt>\n                                        <dt>git</dt>\n                                        <dt>C.I</dt>\n                                    </dl>\n                                </span>\n                                <p>프로젝트 내용</p>\n                            </div>\n                        </dd>\n                        <dd>\n                            <span>5. 프로젝트 경험</span>\n                            <div>\n                                <p>사용한 기술</p>\n                                <p>프로젝트 내용</p>\n                            </div>\n                        </dd>\n                        <dd>\n                            <span>4. 프로젝트 경험</span>\n                            <div>\n                                <p>사용한 기술</p>\n                                <p>프로젝트 내용</p>\n                            </div>\n                        </dd>\n                        <dd>\n                            <span>3. 프로젝트 경험</span>\n                            <div>\n                                <p>사용한 기술</p>\n                                <p>프로젝트 내용</p>\n                            </div>\n                        </dd>\n                        <dd>\n                            <span>2. 프로젝트 경험</span>\n                            <div>\n                                <p>사용한 기술</p>\n                                <p>프로젝트 내용</p>\n                            </div>\n                        </dd>\n                        <dd>\n                            <span>1. 프로젝트 경험</span>\n                            <div>\n                                <p>사용한 기술</p>\n                                <p>프로젝트 내용</p>\n                            </div>\n                        </dd>\n                    </dl>\n                </div>\n                <div className={\"profile-about-me \" + (this.state.menuOn === 'announce' ? 'on' : '')}>\n                    <dl>\n                        <dt>발표</dt>\n                        <dd>\n                            1. 발표 제목\n                            <span> 발표 ppt url</span>\n                        </dd>\n                    </dl>\n                </div>\n                {/**\n                 * 글쓰기 포맷\n                 * 글쓰기시 활성화 component\n                 * writer 클릭시 class 활성화 active\n                 */}\n                 <div>\n                     <ProfileWrite></ProfileWrite>\n                 </div>\n            </div>\n        )\n    }\n}\n\n// props의 타입을 지정해준다\n// 부모로 부터 받은 값을 이야기한다\nproFile.defaultProps = {\n    name: PropTypes.string,\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\n\nclass blog extends Component {\n\n    constructor(props){\n        super(props);\n    }\n    render() {\n        return (\n            <div>\n                <div className=\"blog-info\">\n                    <dl>\n                        <dd>{this.props.name}</dd>\n                        <dd>React</dd>\n                        <dd>Express</dd>\n                        <dd>FireBase</dd>\n                        <dd>MariaDB</dd>\n                        <dd>AWS RDS</dd>\n                        <dd>Git Hub</dd>\n                    </dl>\n                </div>\n\n                <div className=\"blog-connenct\">\n\n                </div>\n            </div>\n        );\n    }\n}\n\n\nblog.propTypes = {\n    name:PropTypes.string = 'kk'\n};\n\n\nexport default blog;\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport axios from 'axios';\n\nexport class schedule extends Component {\n\n    constructor(props){\n\n        super(props);\n\n        this.state = {\n            getTitle : 'zzzz'\n        };\n    }\n\n    /**\n     * React Component가 실행할 때 제일 먼저 실행될 함수\n     * 주로 비동기 통신 할 때 사용한다.\n     * arrow function 일 경우 setStete가 먹힌다.\n     * 원인은 파악 중\n     */\n    componentWillMount(){\n        axios.get('https://api.ip.pe.kr/', { params : {id : 1}}).then((response) => {\n            console.log(response.data);\n            this.setState({ \n                getTitle: response.data\n              });\n            // this.setState({getTitle : response.data});\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                {this.state.getTitle}\n                {this.aa}\n            </div>\n        )\n    }\n}\n\nschedule.defaultProps = {\n    name: PropTypes.string,\n}\nexport default schedule\n","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport { Profile, Blog, Schedule } from './index';\nclass moduel extends React.Component {\n\n    constructor(props){\n        super(props);\n        \n        this.state = {\n\n        }\n    }\n    render(){\n        return(\n            <div>\n                {/**\n                 * 해당 url에 대한 컴포넌트를 지정할 때 사용을 한다.\n                 * render function () { return <>} 이렇게 쓰는 방법\n                 * component = {component }를 사용하는 방법이다\n                 */}\n                <Route path=\"/zzzz1\" render={() => (\n                    <h3>Render Test</h3>\n                )}></Route>\n                <Route path=\"/about\" component={Profile}></Route>\n                <Route path=\"/blog\" component={ () => <Blog name=\"name\"></Blog>}></Route>\n                <Route path=\"/schedule\" component={ () => <Schedule name=\"schedule\"></Schedule>}></Route>\n            </div>\n        )\n    }\n}\n\nexport default moduel;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport {\n  BrowserRouter as Route,\n  Router,\n  Link\n} from 'react-router-dom';\n\nimport Header from './header/header';\n\nimport Moduel from './content/moduel';\nfunction App() {\n  return (\n    <Route className=\"container\">\n      <Header></Header>\n      <Moduel></Moduel>\n    </Route>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n// import jQuery from 'jquery';\n// window.$ = window.jQuery = jQuery;\nReactDOM.render(<Router basename={process.env.PUBLIC_URL}>< App /></Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}