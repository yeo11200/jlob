{"version":3,"sources":["new.contents/moduel/board/profileComponent/LOGO.png","new.contents/_includes/header.js","new.contents/moduel/board/profileComponent/person.js","common.js","fun.js","new.contents/moduel/board/profileComponent/profile.view.js","new.contents/moduel/board/profile.js","new.contents/moduel/board/profileComponent/profile.view.id.js","new.contents/moduel/index.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["module","exports","Header","classname","link","color","alignItmes","flexDirection","console","log","AppBar","position","Tabs","aria-label","exact","to","style","Tab","label","React","Component","person","props","window","location","origin","Card","CardActionArea","CardMedia","component","alt","height","width","image","require","title","maxWidth","maxHeight","border","margin","padding","display","CardContent","Typography","gutterBottom","variant","href","API_SERVER","host","indexOf","dateYmdFilter","date","split","callTest","name","i","startDate","Date","start","endDate","end","monthDate","getTime","day","push","idx","month","allCareer","j","career","Math","ceil","data","yearCareer","floor","splitComma","items","html","undefined","ProfileView","handleSearch","TableRow","key","this","row","mc_compony","TableCell","scope","align","mc_idx","textDecoration","mc_position","dangerouslySetInnerHTML","__html","Fun","mc_project_name","mc_startdate","mc_enddate","Profile","getProfileData","a","totalCareer","axios","get","Common","then","response","resposnseCode","status","setState","itemsList","carrer","state","textAlign","TableContainer","Paper","Table","TableHead","TableBody","map","value","index","onRemove","handleRemove","onSelectRow","handleSelectRow","ProfileDetail","view","error","paperCustom","list","$","removeClass","dataSet","addClass","query","queryString","parse","search","id","Box","m","CircularProgress","elevation","className","onClick","pro_content","pro_start_date","pro_end_date","pro_skill_set","Index","path","render","App","basename","process","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.8a665e33.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/LOGO.6bc3212c.png\";","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { AppBar, Tabs, Tab,  Toolbar, Typography, Button, IconButton} from '@material-ui/core';\r\nimport {  } from '@material-ui/icons'\r\nclass Header extends React.Component{\r\n\r\n    render(){\r\n        var classname = {\r\n            link : {\r\n                color : '#CC6666',\r\n                alignItmes : 'center',\r\n                flexDirection : 'column'\r\n            }\r\n        }\r\n\r\n        console.log(classname);\r\n        return(\r\n            <AppBar position=\"static\">\r\n                {/* value={value} onChange={handleChange} */}\r\n                <Tabs aria-label=\"simple tabs example\">\r\n                    <Link exact to=\"/test\" style={classname.link}><Tab label=\"블로그 개발\"></Tab></Link>\r\n                    <Link exact to=\"/test2\" style={classname.link}><Tab label=\"이력서\"></Tab></Link>\r\n                    <Link to=\"/test3\" style={classname.link}><Tab label=\"채팅\"></Tab></Link>\r\n                </Tabs>\r\n            </AppBar>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { Card, CardActionArea, CardActions, CardContent, CardMedia, Typography } from '@material-ui/core';\r\nimport { logo } from '../../../../logo.svg';\r\n\r\nclass person extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        console.log(window.location.origin );\r\n    }\r\n\r\n    render(){\r\n\r\n        const style = {\r\n            media : {\r\n                width: 'auto',\r\n                height: 'auto',\r\n                maxWidth: '100px',\r\n                maxHeight: '100px',\r\n                border: 'none', margin: '0', padding: '0', display: 'inline',\r\n            }\r\n        }\r\n        return(\r\n            <div>\r\n                 {/* 개인 정보를 적는 컴포넌트 */}\r\n                 <Card>\r\n                    <CardActionArea>\r\n                        \r\n                        {/** require('./LOGO.png') image를 추가할 경우는 require를 이용해서 사용한다. */}\r\n                        <CardMedia\r\n                        component=\"img\"\r\n                        alt=\"Contemplative Reptile\"\r\n                        height=\"100px\"\r\n                        width=\"100px\"\r\n                        image={require('./LOGO.png')}\r\n                        title=\"Contemplative Reptile\"\r\n\r\n                        style={style.media}\r\n                        />\r\n                        <CardContent>\r\n                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                            신진섭\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                            프론트개발자를 지향하지만, 풀스택 개발을 원한다.\r\n                        </Typography>\r\n                        </CardContent>\r\n                    </CardActionArea>\r\n                </Card>\r\n\r\n                <div>\r\n                    <span>Blog : </span><a href=\"https://blog.naver.com/sksksms2\">https://blog.naver.com/sksksms2</a>\r\n                </div>\r\n                <div>\r\n                    <span>GitHub : </span><a href=\"https://github.com/yeo11200\">https://github.com/yeo11200</a>\r\n                </div>\r\n                <div>\r\n                    <span>Contact : </span><a href=\"mailto:yeo11200@hanmail.net\">yeo11200@hanmail.net</a>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default person;","export var API_SERVER = window.location.host.indexOf('localhost') >= 0 ? '//localhost:5000' : 'https://jinseop-todo-list.herokuapp.com';\r\n\r\n// export var API_SERVER = 'https://jinseop-todo-list.herokuapp.com';\r\n\r\n","// export를 해서 내보내줘야한다\r\n// 받을땐 import\r\nexport function a(){\r\n    let careerFirstDate = ['2019-01-01', '2019-05-31'];\r\n    let careerSecDate = ['2019-07-17'];\r\n    \r\n    let careerFirstDateEnd = new Date(careerFirstDate[1]);\r\n    let careerFirstDateStart = new Date(careerFirstDate[0]);\r\n\r\n    let careerSecDateEnd = new Date();\r\n    let careerSecDateStart = new Date(careerSecDate[0]);\r\n    // mssecond를 하루로 만드는 공식\r\n    let day = 24 * 60 * 60 * 1000;\r\n    // mssecond를 한달로 만드는 공식\r\n    let month = day * 30;\r\n\r\n    let firstMonth = (careerFirstDateEnd.getTime() - careerFirstDateStart.getTime()) / month;\r\n    let secondMonth = (careerSecDateEnd.getTime() - careerSecDateStart.getTime()) / month;\r\n\r\n\r\n    let allCareer = Math.ceil(firstMonth + secondMonth);\r\n    let data = null;\r\n\r\n    if(allCareer > 13){\r\n\r\n        var yearCareer = Math.floor((allCareer / 12));\r\n        data = Math.floor(allCareer / 12) +'년' + (allCareer % (12 * yearCareer)) +'개월';\r\n    }else{\r\n        data = allCareer + '개월';\r\n    }\r\n\r\n    return data;\r\n}\r\n\r\nexport function dateYmdFilter(date){\r\n\r\n    let dateYmd = null;\r\n    let dateA = null;\r\n\r\n    if(date == null){\r\n\r\n        dateYmd = 'Now';\r\n    }else{\r\n        dateA = date.split('T');\r\n\r\n        dateYmd = dateA[0];\r\n    }\r\n\r\n    return dateYmd;\r\n}\r\n\r\nexport function callTest(name){\r\n\r\n    // mssecond를 하루로 만드는 공식\r\n    let day = 24 * 60 * 60 * 1000;\r\n    // mssecond를 한달로 만드는 공식\r\n    let month = day * 30;\r\n\r\n    let date = [];\r\n    \r\n    for(let i in name){\r\n\r\n        let startDate = new Date(name[i].start);\r\n        let endDate = (name[i].end == null) ? new Date() : new Date(name[i].end);\r\n        let monthDate = (startDate.getTime() - endDate.getTime()) / month;\r\n        console.log(monthDate);\r\n        date.push({idx : name[i].idx, month : monthDate});\r\n    }\r\n\r\n    let allCareer = null;\r\n    for(let j in date){\r\n        allCareer -= date[j].month;\r\n    }\r\n\r\n    let career = Math.ceil(allCareer);\r\n    let data = null;\r\n\r\n    if(career > 13){\r\n\r\n        var yearCareer = Math.floor((career / 12));\r\n        data = Math.floor(career / 12) +'년' + (career % (12 * yearCareer)) +'개월';\r\n    }else{\r\n        data = career + '개월';\r\n    }\r\n\r\n    return data;\r\n}\r\n\r\nexport function splitComma(items){\r\n\r\n    var html = '<span>기술 스펙 : </span><div>';\r\n\r\n    console.log(items);\r\n    if(items !== undefined){\r\n        var splitComma = items.split(',');\r\n        \r\n        for(var i in splitComma){\r\n            console.log(splitComma[i]);\r\n    \r\n            html += '<span>'+splitComma[i]+'</span>';\r\n        }\r\n    }else{\r\n        html += '<span>'+items+'</span>';\r\n    }\r\n\r\n    html += '</div>';\r\n\r\n    return html;\r\n}","import React from \"react\";\r\nimport { Link } from 'react-router-dom';\r\n// import { Modal, Backdrop } from '@material-ui/core';\r\nimport { TableContainer, Table, TableHead, TableRow, TableCell, Paper, TableBody } from '@material-ui/core';\r\n\r\nimport * as Common from '../../../../common';\r\nimport * as Fun from '../../../../fun';\r\n\r\nclass ProfileView extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        console.log('props111');\r\n        console.log(props);\r\n    }\r\n    \r\n    handleSearch = function(items){\r\n        console.log(items);\r\n        // window.location.href = `/test2/view?id=${items}`;\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <TableRow key={this.props.row.mc_compony}>\r\n                <TableCell component=\"th\" scope=\"rows\">\r\n                    {this.props.row.mc_compony}\r\n                </TableCell>\r\n                <TableCell align=\"center\"><Link to={`/test2/dita?id=${this.props.row.mc_idx}`} style={{textDecoration: 'none'}}>{this.props.row.mc_position}</Link></TableCell>\r\n                <TableCell align=\"right\"><div dangerouslySetInnerHTML={{__html : Fun.splitComma(this.props.row.mc_project_name)}}></div></TableCell>\r\n                {/* <TableCell align=\"right\">{value.mc_project_name}</TableCell> */}\r\n                <TableCell align=\"right\">{Fun.dateYmdFilter(this.props.row.mc_startdate)}</TableCell>\r\n                <TableCell align=\"right\">{Fun.dateYmdFilter(this.props.row.mc_enddate)}</TableCell>\r\n            </TableRow>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default ProfileView;","import React from \"react\";\r\nimport axios from 'axios';\r\nimport Person from './profileComponent/person';\r\nimport ProfileView from './profileComponent/profile.view';\r\n\r\nimport ReactLoading from 'react-loading';\r\nimport { TableContainer, Table, TableHead, TableRow, TableCell, Paper, TableBody } from '@material-ui/core';\r\nimport { FirstPage, LastPage, KeyboardArrowRight, KeyboardArrowLeft} from '@material-ui/icons';\r\n\r\nimport * as Common from '../../../common';\r\nimport * as Fun from '../../../fun';\r\n\r\nclass Profile extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        console.log(props);\r\n\r\n        this.state = {\r\n            itemsList : [],\r\n            resposnseCode : null,\r\n        }        \r\n    }\r\n\r\n    componentDidMount(){\r\n        console.log(1);\r\n        this.getProfileData();\r\n    }\r\n\r\n    getProfileData = async () => {\r\n        \r\n        var  totalCareer = [];\r\n\r\n        await axios.get(Common.API_SERVER+'/profile').then( response => {\r\n            \r\n            var items = response.data;\r\n\r\n            var resposnseCode = items.status;\r\n            this.setState({resposnseCode : items.status});\r\n\r\n            console.log(resposnseCode);\r\n            if(resposnseCode === 200){\r\n\r\n                var itemsList = items.data.carrer;\r\n\r\n                for(var i in itemsList){\r\n                    console.log(itemsList[i]);\r\n\r\n                    totalCareer.push({ idx : itemsList[i].mc_idx , start : itemsList[i].mc_startdate, end : itemsList[i].mc_enddate});\r\n                }\r\n                var date = Fun.callTest(totalCareer)\r\n                this.setState({itemsList : itemsList, date : date});\r\n\r\n\r\n                Fun.callTest(totalCareer);\r\n                \r\n            }else{\r\n                this.setState({itemsList : []});\r\n            }\r\n\r\n        })\r\n\r\n    }\r\n\r\n    render(){\r\n\r\n        let { itemsList, resposnseCode, date } = this.state;\r\n        return(\r\n            <div>\r\n                <h2>이력서</h2>\r\n                <Person></Person>\r\n\r\n                {/* 자기 소개서나 프로젝트 별로 작업 할 곳 */}\r\n\r\n                <div>\r\n                    <h2>경력사항</h2> <div style={{textAlign: 'right'}}>총경력 : {date}</div>\r\n                    <TableContainer component={Paper}>\r\n                        <Table aria-label=\"simple table\">\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell>회사명 </TableCell>\r\n                                    <TableCell align=\"center\">직군</TableCell>\r\n                                    <TableCell align=\"right\">프로젝트</TableCell>\r\n                                    <TableCell align=\"right\">입사 일</TableCell>\r\n                                    <TableCell align=\"right\">종료 일</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                            {itemsList.map((value, index) => (\r\n                                \r\n                                <ProfileView key={value.mc_idx} row={value} onRemove={this.handleRemove} onSelectRow={this.handleSelectRow} />\r\n                                \r\n                            ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport queryString from 'query-string';\r\nimport axios from 'axios';\r\nimport * as Common from '../../../../common';\r\nimport { TableContainer, Table, TableHead, TableRow, TableCell, Paper, TableBody, Box, TextField, CircularProgress} from '@material-ui/core';\r\nimport ProfileView from './profile.view';\r\nimport * as Fun from '../../../../fun';\r\nimport $ from 'jquery';\r\n\r\nclass ProfileDetail extends React.Component{\r\n\r\n    constructor(props){\r\n\r\n        super(props);\r\n\r\n        var query = queryString.parse(props.location.search);\r\n        \r\n        console.log('detail', query);\r\n\r\n        console.log(props);\r\n\r\n        this.state = {\r\n            idx : query.id,\r\n            itemsList : [],\r\n            resposnseCode : null,\r\n            title : {},\r\n            date : null,\r\n            dataSet : null,\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount(){\r\n        this.getProfileData();\r\n    }\r\n\r\n    getProfileData = async () => {\r\n        \r\n        var  totalCareer = [];\r\n\r\n        await axios.get(Common.API_SERVER+'/profile/'+ this.state.idx).then( response => {\r\n            \r\n            var items = response.data;\r\n\r\n            var resposnseCode = items.status;\r\n            this.setState({resposnseCode : items.status});\r\n\r\n            \r\n            if(resposnseCode === 200){\r\n\r\n                var itemsList = items.data.view;\r\n                var title = items.data.title;\r\n\r\n                console.error(title);\r\n                totalCareer.push({ idx : title.mc_idx , start : title.mc_startdate, end : title.mc_enddate});\r\n                console.log(itemsList);\r\n                this.setState({itemsList : itemsList, title : title, date : Fun.callTest(totalCareer)});\r\n                \r\n            }else{\r\n                this.setState({itemsList : []});\r\n            }\r\n\r\n        })\r\n\r\n    }\r\n\r\n    paperCustom = (index, list) => {\r\n        console.log($('.ui-'+index));\r\n\r\n        console.log(list);\r\n        $('.MuiPaper-root').removeClass('MuiPaper-elevation3');\r\n\r\n        this.setState({dataSet : index});\r\n        $('.ui-'+index).addClass('MuiPaper-elevation3');\r\n    }\r\n    render(){\r\n\r\n        let { itemsList, resposnseCode, title, date } = this.state;\r\n\r\n        console.log(this.state.dataSet)\r\n        return(\r\n            <div>\r\n                    <Box component=\"div\" m={1}>\r\n                        {title.mc_compony} <span>{date}</span>\r\n                    </Box>\r\n                    {\r\n                        resposnseCode == null ? <CircularProgress color=\"secondary\" /> : itemsList.map((value, index) => (\r\n                            <Paper elevation={1} className={`ui-${index}` + (this.state.dataSet === index ? ' on' : '')} onClick={ () => this.paperCustom(index, itemsList)}\r\n                            color=\"secondary.main\"\r\n                            >\r\n                                <div>\r\n                                    <div><span>프로젝트 명 : </span>{value.pro_content}</div>\r\n                                    <div><span>프로젝트 시작일 : </span>{Fun.dateYmdFilter(value.pro_start_date)}</div>\r\n                                    <div><span>프로젝트 종료일: </span>{Fun.dateYmdFilter(value.pro_end_date)}</div>\r\n                                    <div dangerouslySetInnerHTML={{__html : Fun.splitComma(value.pro_skill_set)}}></div>\r\n                                </div>\r\n                            </Paper>\r\n                        ))\r\n                    }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProfileDetail;","/**\r\n * Route의 component의 데이터를 export만 시키기 위한 js\r\n */\r\nimport React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { Profile, ProfileDetail } from '../route/router';\r\n\r\nclass Index extends React.Component{\r\n    render(){\r\n        console.log('Index');\r\n        return(\r\n            <div>\r\n                {/**\r\n                 * 해당 url에 대한 컴포넌트를 지정할 때 사용을 한다.\r\n                 * render function () { return <>} 이렇게 쓰는 방법\r\n                 * component = {component }를 사용하는 방법이다\r\n                 */}\r\n                <Route path=\"/test\" render={() => (\r\n                    <h3>Render Test</h3>\r\n                )}></Route>\r\n\r\n                    <Route exact path=\"/test2\" component={ Profile }></Route>\r\n                    <Route path=\"/test2/dita\" component={ ProfileDetail }></Route>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Index;","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\n\r\nimport {\r\n  BrowserRouter as Route,\r\n  Router,\r\n  Link \r\n} from 'react-router-dom';\r\n\r\nimport Header from './new.contents/_includes/header';\r\n\r\nimport Index from './new.contents/moduel/index';\r\n\r\nimport '../src/css/common.css?v=2020';\r\nfunction App() {\r\n  \r\n  return (\r\n    // basename={process.env.PUBLIC_URL} : 기본적인 경로는 유지 됨\r\n    <Route className=\"container\" basename={process.env.PUBLIC_URL} >\r\n      <Header></Header>\r\n      <Index></Index>\r\n    </Route>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nReactDOM.render(<Router basename={process.env.PUBLIC_URL}>< App /></Router>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";"],"sourceRoot":""}